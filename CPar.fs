// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)
open Absyn

// Vardesc 返回的是一个 元组 (g,s)
// g是类型构造函数，s是变量名
// compose1 函数 取出 类型构造子 g，用类型复合机制构造类型。

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10 //  \n 的 ASCII 码

# 22 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | CHAR
  | ELSE
  | IF
  | INT
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | WHILE
  | FOR
  | IN
  | DO
  | DOUNTIL
  | DOWHILE
  | UNTIL
  | SWITCH
  | CASE
  | RANGE
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_CHAR
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_FOR
    | TOKEN_IN
    | TOKEN_DO
    | TOKEN_DOUNTIL
    | TOKEN_DOWHILE
    | TOKEN_UNTIL
    | TOKEN_SWITCH
    | TOKEN_CASE
    | TOKEN_RANGE
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_Type

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | NOT  -> 11 
  | SEQOR  -> 12 
  | SEQAND  -> 13 
  | EQ  -> 14 
  | NE  -> 15 
  | GT  -> 16 
  | LT  -> 17 
  | GE  -> 18 
  | LE  -> 19 
  | PLUS  -> 20 
  | MINUS  -> 21 
  | TIMES  -> 22 
  | DIV  -> 23 
  | MOD  -> 24 
  | CHAR  -> 25 
  | ELSE  -> 26 
  | IF  -> 27 
  | INT  -> 28 
  | NULL  -> 29 
  | PRINT  -> 30 
  | PRINTLN  -> 31 
  | RETURN  -> 32 
  | VOID  -> 33 
  | WHILE  -> 34 
  | FOR  -> 35 
  | IN  -> 36 
  | DO  -> 37 
  | DOUNTIL  -> 38 
  | DOWHILE  -> 39 
  | UNTIL  -> 40 
  | SWITCH  -> 41 
  | CASE  -> 42 
  | RANGE  -> 43 
  | CSTSTRING _ -> 44 
  | NAME _ -> 45 
  | CSTINT _ -> 46 
  | CSTBOOL _ -> 47 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_NOT 
  | 12 -> TOKEN_SEQOR 
  | 13 -> TOKEN_SEQAND 
  | 14 -> TOKEN_EQ 
  | 15 -> TOKEN_NE 
  | 16 -> TOKEN_GT 
  | 17 -> TOKEN_LT 
  | 18 -> TOKEN_GE 
  | 19 -> TOKEN_LE 
  | 20 -> TOKEN_PLUS 
  | 21 -> TOKEN_MINUS 
  | 22 -> TOKEN_TIMES 
  | 23 -> TOKEN_DIV 
  | 24 -> TOKEN_MOD 
  | 25 -> TOKEN_CHAR 
  | 26 -> TOKEN_ELSE 
  | 27 -> TOKEN_IF 
  | 28 -> TOKEN_INT 
  | 29 -> TOKEN_NULL 
  | 30 -> TOKEN_PRINT 
  | 31 -> TOKEN_PRINTLN 
  | 32 -> TOKEN_RETURN 
  | 33 -> TOKEN_VOID 
  | 34 -> TOKEN_WHILE 
  | 35 -> TOKEN_FOR 
  | 36 -> TOKEN_IN 
  | 37 -> TOKEN_DO 
  | 38 -> TOKEN_DOUNTIL 
  | 39 -> TOKEN_DOWHILE 
  | 40 -> TOKEN_UNTIL 
  | 41 -> TOKEN_SWITCH 
  | 42 -> TOKEN_CASE 
  | 43 -> TOKEN_RANGE 
  | 44 -> TOKEN_CSTSTRING 
  | 45 -> TOKEN_NAME 
  | 46 -> TOKEN_CSTINT 
  | 47 -> TOKEN_CSTBOOL 
  | 50 -> TOKEN_end_of_input
  | 48 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Vardec 
    | 7 -> NONTERM_Vardesc 
    | 8 -> NONTERM_Vardesc 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Fundec 
    | 13 -> NONTERM_Fundec 
    | 14 -> NONTERM_Paramdecs 
    | 15 -> NONTERM_Paramdecs 
    | 16 -> NONTERM_Paramdecs1 
    | 17 -> NONTERM_Paramdecs1 
    | 18 -> NONTERM_Block 
    | 19 -> NONTERM_StmtOrDecSeq 
    | 20 -> NONTERM_StmtOrDecSeq 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_Stmt 
    | 23 -> NONTERM_Stmt 
    | 24 -> NONTERM_StmtM 
    | 25 -> NONTERM_StmtM 
    | 26 -> NONTERM_StmtM 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtM 
    | 33 -> NONTERM_StmtM 
    | 34 -> NONTERM_StmtU 
    | 35 -> NONTERM_StmtU 
    | 36 -> NONTERM_StmtU 
    | 37 -> NONTERM_Expr 
    | 38 -> NONTERM_Expr 
    | 39 -> NONTERM_ExprNotAccess 
    | 40 -> NONTERM_ExprNotAccess 
    | 41 -> NONTERM_ExprNotAccess 
    | 42 -> NONTERM_ExprNotAccess 
    | 43 -> NONTERM_ExprNotAccess 
    | 44 -> NONTERM_ExprNotAccess 
    | 45 -> NONTERM_ExprNotAccess 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_AtExprNotAccess 
    | 59 -> NONTERM_AtExprNotAccess 
    | 60 -> NONTERM_AtExprNotAccess 
    | 61 -> NONTERM_Access 
    | 62 -> NONTERM_Access 
    | 63 -> NONTERM_Access 
    | 64 -> NONTERM_Access 
    | 65 -> NONTERM_Access 
    | 66 -> NONTERM_Exprs 
    | 67 -> NONTERM_Exprs 
    | 68 -> NONTERM_Exprs1 
    | 69 -> NONTERM_Exprs1 
    | 70 -> NONTERM_Const 
    | 71 -> NONTERM_Const 
    | 72 -> NONTERM_Const 
    | 73 -> NONTERM_Const 
    | 74 -> NONTERM_Type 
    | 75 -> NONTERM_Type 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 50 
let _fsyacc_tagOfErrorTerminal = 48

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | CHAR  -> "CHAR" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | FOR  -> "FOR" 
  | IN  -> "IN" 
  | DO  -> "DO" 
  | DOUNTIL  -> "DOUNTIL" 
  | DOWHILE  -> "DOWHILE" 
  | UNTIL  -> "UNTIL" 
  | SWITCH  -> "SWITCH" 
  | CASE  -> "CASE" 
  | RANGE  -> "RANGE" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | DOUNTIL  -> (null : System.Object) 
  | DOWHILE  -> (null : System.Object) 
  | UNTIL  -> (null : System.Object) 
  | SWITCH  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | RANGE  -> (null : System.Object) 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 4us; 5us; 2us; 65535us; 0us; 4us; 4us; 4us; 8us; 65535us; 0us; 6us; 4us; 6us; 25us; 34us; 29us; 34us; 35us; 34us; 37us; 42us; 40us; 42us; 43us; 42us; 4us; 65535us; 9us; 11us; 10us; 11us; 14us; 15us; 16us; 17us; 2us; 65535us; 0us; 8us; 4us; 8us; 2us; 65535us; 25us; 26us; 29us; 30us; 3us; 65535us; 25us; 33us; 29us; 33us; 35us; 36us; 14us; 65535us; 27us; 28us; 31us; 32us; 37us; 54us; 40us; 54us; 43us; 54us; 61us; 54us; 62us; 54us; 64us; 54us; 65us; 54us; 73us; 54us; 74us; 54us; 76us; 54us; 95us; 54us; 104us; 54us; 3us; 65535us; 37us; 38us; 40us; 41us; 43us; 44us; 4us; 65535us; 37us; 40us; 40us; 40us; 43us; 40us; 62us; 107us; 12us; 65535us; 37us; 45us; 40us; 45us; 43us; 45us; 61us; 63us; 62us; 46us; 64us; 66us; 65us; 66us; 73us; 75us; 74us; 75us; 76us; 77us; 95us; 96us; 104us; 105us; 6us; 65535us; 37us; 47us; 40us; 47us; 43us; 47us; 62us; 47us; 65us; 106us; 74us; 108us; 43us; 65535us; 37us; 48us; 40us; 48us; 43us; 48us; 50us; 52us; 57us; 60us; 58us; 59us; 61us; 48us; 62us; 48us; 64us; 48us; 65us; 48us; 69us; 72us; 70us; 71us; 73us; 48us; 74us; 48us; 76us; 48us; 79us; 80us; 84us; 85us; 88us; 97us; 89us; 90us; 91us; 92us; 93us; 94us; 95us; 48us; 104us; 48us; 114us; 115us; 117us; 140us; 120us; 121us; 122us; 123us; 141us; 125us; 142us; 126us; 143us; 127us; 144us; 128us; 145us; 129us; 146us; 130us; 147us; 131us; 148us; 132us; 149us; 133us; 150us; 134us; 151us; 135us; 152us; 136us; 153us; 138us; 155us; 137us; 166us; 139us; 169us; 140us; 43us; 65535us; 37us; 111us; 40us; 111us; 43us; 111us; 50us; 111us; 57us; 111us; 58us; 111us; 61us; 111us; 62us; 111us; 64us; 111us; 65us; 111us; 69us; 111us; 70us; 111us; 73us; 111us; 74us; 111us; 76us; 111us; 79us; 111us; 84us; 111us; 88us; 111us; 89us; 112us; 91us; 111us; 93us; 111us; 95us; 111us; 104us; 111us; 114us; 111us; 117us; 111us; 120us; 111us; 122us; 111us; 141us; 111us; 142us; 111us; 143us; 111us; 144us; 111us; 145us; 111us; 146us; 111us; 147us; 111us; 148us; 111us; 149us; 111us; 150us; 111us; 151us; 111us; 152us; 111us; 153us; 111us; 155us; 112us; 166us; 111us; 169us; 111us; 44us; 65535us; 37us; 113us; 40us; 113us; 43us; 113us; 50us; 113us; 57us; 113us; 58us; 113us; 61us; 113us; 62us; 113us; 64us; 113us; 65us; 113us; 69us; 113us; 70us; 113us; 73us; 113us; 74us; 113us; 76us; 113us; 79us; 113us; 84us; 113us; 88us; 113us; 89us; 113us; 91us; 113us; 93us; 113us; 95us; 113us; 104us; 113us; 114us; 113us; 117us; 113us; 120us; 113us; 122us; 113us; 141us; 113us; 142us; 113us; 143us; 113us; 144us; 113us; 145us; 113us; 146us; 113us; 147us; 113us; 148us; 113us; 149us; 113us; 150us; 113us; 151us; 113us; 152us; 113us; 153us; 113us; 155us; 113us; 163us; 165us; 166us; 113us; 169us; 113us; 46us; 65535us; 37us; 110us; 40us; 110us; 43us; 110us; 50us; 110us; 57us; 110us; 58us; 110us; 61us; 110us; 62us; 110us; 64us; 110us; 65us; 110us; 69us; 110us; 70us; 110us; 73us; 110us; 74us; 110us; 76us; 110us; 79us; 110us; 84us; 110us; 88us; 110us; 89us; 109us; 91us; 110us; 93us; 110us; 95us; 110us; 104us; 110us; 114us; 110us; 117us; 110us; 120us; 110us; 122us; 110us; 141us; 110us; 142us; 110us; 143us; 110us; 144us; 110us; 145us; 110us; 146us; 110us; 147us; 110us; 148us; 110us; 149us; 110us; 150us; 110us; 151us; 110us; 152us; 110us; 153us; 110us; 155us; 109us; 157us; 158us; 160us; 161us; 163us; 164us; 166us; 110us; 169us; 110us; 1us; 65535us; 117us; 118us; 2us; 65535us; 117us; 168us; 169us; 170us; 44us; 65535us; 37us; 154us; 40us; 154us; 43us; 154us; 50us; 154us; 57us; 154us; 58us; 154us; 61us; 154us; 62us; 154us; 64us; 154us; 65us; 154us; 69us; 154us; 70us; 154us; 73us; 154us; 74us; 154us; 76us; 154us; 79us; 154us; 84us; 154us; 88us; 154us; 89us; 154us; 91us; 154us; 93us; 154us; 95us; 154us; 104us; 154us; 114us; 154us; 117us; 154us; 120us; 154us; 122us; 154us; 141us; 154us; 142us; 154us; 143us; 154us; 144us; 154us; 145us; 154us; 146us; 154us; 147us; 154us; 148us; 154us; 149us; 154us; 150us; 154us; 151us; 154us; 152us; 154us; 153us; 154us; 155us; 154us; 163us; 154us; 166us; 154us; 169us; 154us; 8us; 65535us; 0us; 10us; 4us; 10us; 25us; 9us; 29us; 9us; 35us; 9us; 37us; 9us; 40us; 9us; 43us; 9us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 18us; 23us; 26us; 29us; 33us; 48us; 52us; 57us; 70us; 77us; 121us; 165us; 210us; 257us; 259us; 262us; 307us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 6us; 2us; 6us; 13us; 3us; 6us; 10us; 11us; 1us; 7us; 2us; 7us; 13us; 1us; 8us; 3us; 8us; 10us; 11us; 1us; 9us; 3us; 9us; 10us; 11us; 1us; 9us; 2us; 10us; 11us; 1us; 10us; 1us; 11us; 1us; 11us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 15us; 2us; 16us; 17us; 1us; 17us; 1us; 17us; 1us; 18us; 1us; 18us; 1us; 18us; 1us; 20us; 1us; 20us; 1us; 21us; 1us; 21us; 1us; 21us; 1us; 22us; 3us; 22us; 28us; 34us; 1us; 23us; 14us; 24us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 1us; 24us; 2us; 25us; 26us; 1us; 25us; 14us; 26us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 1us; 26us; 1us; 27us; 1us; 28us; 3us; 28us; 34us; 35us; 1us; 28us; 3us; 28us; 34us; 35us; 16us; 28us; 34us; 35us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 14us; 28us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 1us; 28us; 3us; 28us; 34us; 35us; 1us; 28us; 1us; 28us; 2us; 28us; 34us; 1us; 28us; 1us; 29us; 2us; 29us; 36us; 1us; 29us; 2us; 29us; 36us; 15us; 29us; 36us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 14us; 29us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 1us; 29us; 2us; 29us; 36us; 1us; 29us; 2us; 30us; 31us; 2us; 30us; 31us; 1us; 30us; 1us; 30us; 14us; 30us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 1us; 30us; 1us; 30us; 1us; 31us; 1us; 31us; 14us; 31us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 1us; 31us; 1us; 31us; 2us; 32us; 33us; 3us; 32us; 59us; 62us; 14us; 32us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 1us; 32us; 14us; 32us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 1us; 32us; 14us; 32us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 1us; 32us; 1us; 32us; 14us; 33us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 1us; 33us; 1us; 33us; 1us; 33us; 1us; 33us; 1us; 33us; 1us; 33us; 1us; 33us; 1us; 33us; 1us; 34us; 1us; 35us; 1us; 36us; 4us; 37us; 40us; 62us; 65us; 3us; 37us; 40us; 65us; 1us; 38us; 2us; 38us; 59us; 1us; 39us; 1us; 40us; 14us; 40us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 2us; 41us; 61us; 1us; 41us; 1us; 41us; 1us; 41us; 1us; 42us; 14us; 42us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 1us; 43us; 14us; 43us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 1us; 44us; 14us; 45us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 14us; 45us; 46us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 14us; 45us; 46us; 47us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 14us; 45us; 46us; 47us; 48us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 14us; 45us; 46us; 47us; 48us; 49us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 14us; 45us; 46us; 47us; 48us; 49us; 50us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 14us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 14us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 52us; 53us; 54us; 55us; 56us; 57us; 14us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 53us; 54us; 55us; 56us; 57us; 14us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 54us; 55us; 56us; 57us; 14us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 55us; 56us; 57us; 14us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 56us; 57us; 13us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 14us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 57us; 14us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 65us; 15us; 45us; 46us; 47us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 68us; 69us; 1us; 45us; 1us; 46us; 1us; 47us; 1us; 48us; 1us; 49us; 1us; 50us; 1us; 51us; 1us; 52us; 1us; 53us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 58us; 2us; 59us; 62us; 1us; 59us; 1us; 60us; 2us; 60us; 65us; 1us; 61us; 1us; 62us; 2us; 62us; 65us; 1us; 62us; 2us; 63us; 64us; 2us; 63us; 65us; 1us; 64us; 1us; 65us; 1us; 65us; 1us; 67us; 1us; 69us; 1us; 69us; 1us; 70us; 1us; 71us; 1us; 72us; 1us; 72us; 1us; 73us; 1us; 74us; 1us; 75us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 23us; 27us; 29us; 32us; 34us; 38us; 40us; 44us; 46us; 49us; 51us; 53us; 55us; 57us; 59us; 61us; 63us; 65us; 67us; 69us; 71us; 73us; 75us; 77us; 80us; 82us; 84us; 86us; 88us; 90us; 92us; 94us; 96us; 98us; 100us; 102us; 106us; 108us; 123us; 125us; 128us; 130us; 145us; 147us; 149us; 151us; 155us; 157us; 161us; 178us; 193us; 195us; 199us; 201us; 203us; 206us; 208us; 210us; 213us; 215us; 218us; 234us; 249us; 251us; 254us; 256us; 259us; 262us; 264us; 266us; 281us; 283us; 285us; 287us; 289us; 304us; 306us; 308us; 311us; 315us; 330us; 332us; 347us; 349us; 364us; 366us; 368us; 383us; 385us; 387us; 389us; 391us; 393us; 395us; 397us; 399us; 401us; 403us; 405us; 410us; 414us; 416us; 419us; 421us; 423us; 438us; 441us; 443us; 445us; 447us; 449us; 464us; 466us; 481us; 483us; 498us; 513us; 528us; 543us; 558us; 573us; 588us; 603us; 618us; 633us; 648us; 663us; 677us; 692us; 707us; 723us; 725us; 727us; 729us; 731us; 733us; 735us; 737us; 739us; 741us; 743us; 745us; 747us; 749us; 751us; 754us; 756us; 758us; 761us; 763us; 765us; 768us; 770us; 773us; 776us; 778us; 780us; 782us; 784us; 786us; 788us; 790us; 792us; 794us; 796us; 798us; 800us; |]
let _fsyacc_action_rows = 178
let _fsyacc_actionTableElements = [|3us; 16386us; 25us; 177us; 28us; 176us; 33us; 23us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 3us; 16386us; 25us; 177us; 28us; 176us; 33us; 23us; 0us; 16387us; 1us; 32768us; 7us; 7us; 0us; 16388us; 0us; 16389us; 3us; 32768us; 1us; 16us; 22us; 14us; 45us; 12us; 3us; 32768us; 1us; 16us; 22us; 14us; 45us; 13us; 1us; 16390us; 5us; 19us; 0us; 16391us; 1us; 16391us; 1us; 29us; 3us; 32768us; 1us; 16us; 22us; 14us; 45us; 12us; 1us; 16392us; 5us; 19us; 3us; 32768us; 1us; 16us; 22us; 14us; 45us; 12us; 2us; 32768us; 2us; 18us; 5us; 19us; 0us; 16393us; 2us; 32768us; 6us; 20us; 46us; 21us; 0us; 16394us; 1us; 32768us; 6us; 22us; 0us; 16395us; 1us; 32768us; 45us; 24us; 1us; 32768us; 1us; 25us; 2us; 16398us; 25us; 177us; 28us; 176us; 1us; 32768us; 2us; 27us; 1us; 32768us; 3us; 37us; 0us; 16396us; 2us; 16398us; 25us; 177us; 28us; 176us; 1us; 32768us; 2us; 31us; 1us; 32768us; 3us; 37us; 0us; 16397us; 0us; 16399us; 1us; 16400us; 8us; 35us; 2us; 32768us; 25us; 177us; 28us; 176us; 0us; 16401us; 19us; 16403us; 1us; 155us; 3us; 37us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 25us; 177us; 27us; 56us; 28us; 176us; 29us; 175us; 30us; 122us; 31us; 124us; 32us; 50us; 34us; 68us; 35us; 88us; 37us; 76us; 45us; 116us; 46us; 171us; 47us; 172us; 1us; 32768us; 4us; 39us; 0us; 16402us; 19us; 16403us; 1us; 155us; 3us; 37us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 25us; 177us; 27us; 56us; 28us; 176us; 29us; 175us; 30us; 122us; 31us; 124us; 32us; 50us; 34us; 68us; 35us; 88us; 37us; 76us; 45us; 116us; 46us; 171us; 47us; 172us; 0us; 16404us; 1us; 32768us; 7us; 43us; 19us; 16403us; 1us; 155us; 3us; 37us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 25us; 177us; 27us; 56us; 28us; 176us; 29us; 175us; 30us; 122us; 31us; 124us; 32us; 50us; 34us; 68us; 35us; 88us; 37us; 76us; 45us; 116us; 46us; 171us; 47us; 172us; 0us; 16405us; 0us; 16406us; 1us; 16406us; 26us; 65us; 0us; 16407us; 14us; 32768us; 7us; 49us; 12us; 153us; 13us; 152us; 14us; 146us; 15us; 147us; 16us; 148us; 17us; 149us; 18us; 150us; 19us; 151us; 20us; 141us; 21us; 142us; 22us; 143us; 23us; 144us; 24us; 145us; 0us; 16408us; 12us; 32768us; 1us; 155us; 7us; 51us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 29us; 175us; 30us; 122us; 31us; 124us; 45us; 116us; 46us; 171us; 47us; 172us; 0us; 16409us; 14us; 32768us; 7us; 53us; 12us; 153us; 13us; 152us; 14us; 146us; 15us; 147us; 16us; 148us; 17us; 149us; 18us; 150us; 19us; 151us; 20us; 141us; 21us; 142us; 22us; 143us; 23us; 144us; 24us; 145us; 0us; 16410us; 0us; 16411us; 1us; 32768us; 1us; 57us; 1us; 32768us; 1us; 58us; 11us; 32768us; 1us; 155us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 29us; 175us; 30us; 122us; 31us; 124us; 45us; 116us; 46us; 171us; 47us; 172us; 11us; 32768us; 1us; 155us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 29us; 175us; 30us; 122us; 31us; 124us; 45us; 116us; 46us; 171us; 47us; 172us; 14us; 32768us; 2us; 62us; 12us; 153us; 13us; 152us; 14us; 146us; 15us; 147us; 16us; 148us; 17us; 149us; 18us; 150us; 19us; 151us; 20us; 141us; 21us; 142us; 22us; 143us; 23us; 144us; 24us; 145us; 14us; 32768us; 2us; 61us; 12us; 153us; 13us; 152us; 14us; 146us; 15us; 147us; 16us; 148us; 17us; 149us; 18us; 150us; 19us; 151us; 20us; 141us; 21us; 142us; 22us; 143us; 23us; 144us; 24us; 145us; 17us; 32768us; 1us; 155us; 3us; 37us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 27us; 55us; 29us; 175us; 30us; 122us; 31us; 124us; 32us; 50us; 34us; 67us; 35us; 88us; 37us; 76us; 45us; 116us; 46us; 171us; 47us; 172us; 17us; 32768us; 1us; 155us; 3us; 37us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 27us; 56us; 29us; 175us; 30us; 122us; 31us; 124us; 32us; 50us; 34us; 68us; 35us; 88us; 37us; 76us; 45us; 116us; 46us; 171us; 47us; 172us; 1us; 32768us; 26us; 64us; 17us; 32768us; 1us; 155us; 3us; 37us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 27us; 55us; 29us; 175us; 30us; 122us; 31us; 124us; 32us; 50us; 34us; 67us; 35us; 88us; 37us; 76us; 45us; 116us; 46us; 171us; 47us; 172us; 17us; 32768us; 1us; 155us; 3us; 37us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 27us; 56us; 29us; 175us; 30us; 122us; 31us; 124us; 32us; 50us; 34us; 68us; 35us; 88us; 37us; 76us; 45us; 116us; 46us; 171us; 47us; 172us; 0us; 16412us; 1us; 32768us; 1us; 69us; 1us; 32768us; 1us; 70us; 11us; 32768us; 1us; 155us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 29us; 175us; 30us; 122us; 31us; 124us; 45us; 116us; 46us; 171us; 47us; 172us; 11us; 32768us; 1us; 155us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 29us; 175us; 30us; 122us; 31us; 124us; 45us; 116us; 46us; 171us; 47us; 172us; 14us; 32768us; 2us; 74us; 12us; 153us; 13us; 152us; 14us; 146us; 15us; 147us; 16us; 148us; 17us; 149us; 18us; 150us; 19us; 151us; 20us; 141us; 21us; 142us; 22us; 143us; 23us; 144us; 24us; 145us; 14us; 32768us; 2us; 73us; 12us; 153us; 13us; 152us; 14us; 146us; 15us; 147us; 16us; 148us; 17us; 149us; 18us; 150us; 19us; 151us; 20us; 141us; 21us; 142us; 22us; 143us; 23us; 144us; 24us; 145us; 17us; 32768us; 1us; 155us; 3us; 37us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 27us; 55us; 29us; 175us; 30us; 122us; 31us; 124us; 32us; 50us; 34us; 67us; 35us; 88us; 37us; 76us; 45us; 116us; 46us; 171us; 47us; 172us; 17us; 32768us; 1us; 155us; 3us; 37us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 27us; 56us; 29us; 175us; 30us; 122us; 31us; 124us; 32us; 50us; 34us; 68us; 35us; 88us; 37us; 76us; 45us; 116us; 46us; 171us; 47us; 172us; 0us; 16413us; 17us; 32768us; 1us; 155us; 3us; 37us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 27us; 55us; 29us; 175us; 30us; 122us; 31us; 124us; 32us; 50us; 34us; 67us; 35us; 88us; 37us; 76us; 45us; 116us; 46us; 171us; 47us; 172us; 2us; 32768us; 34us; 78us; 40us; 83us; 1us; 32768us; 1us; 79us; 11us; 32768us; 1us; 155us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 29us; 175us; 30us; 122us; 31us; 124us; 45us; 116us; 46us; 171us; 47us; 172us; 14us; 32768us; 2us; 81us; 12us; 153us; 13us; 152us; 14us; 146us; 15us; 147us; 16us; 148us; 17us; 149us; 18us; 150us; 19us; 151us; 20us; 141us; 21us; 142us; 22us; 143us; 23us; 144us; 24us; 145us; 1us; 32768us; 7us; 82us; 0us; 16414us; 1us; 32768us; 1us; 84us; 11us; 32768us; 1us; 155us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 29us; 175us; 30us; 122us; 31us; 124us; 45us; 116us; 46us; 171us; 47us; 172us; 14us; 32768us; 2us; 86us; 12us; 153us; 13us; 152us; 14us; 146us; 15us; 147us; 16us; 148us; 17us; 149us; 18us; 150us; 19us; 151us; 20us; 141us; 21us; 142us; 22us; 143us; 23us; 144us; 24us; 145us; 1us; 32768us; 7us; 87us; 0us; 16415us; 11us; 32768us; 1us; 89us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 29us; 175us; 30us; 122us; 31us; 124us; 45us; 116us; 46us; 171us; 47us; 172us; 11us; 32768us; 1us; 155us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 29us; 175us; 30us; 122us; 31us; 124us; 45us; 116us; 46us; 171us; 47us; 172us; 14us; 32768us; 7us; 91us; 12us; 153us; 13us; 152us; 14us; 146us; 15us; 147us; 16us; 148us; 17us; 149us; 18us; 150us; 19us; 151us; 20us; 141us; 21us; 142us; 22us; 143us; 23us; 144us; 24us; 145us; 11us; 32768us; 1us; 155us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 29us; 175us; 30us; 122us; 31us; 124us; 45us; 116us; 46us; 171us; 47us; 172us; 14us; 32768us; 7us; 93us; 12us; 153us; 13us; 152us; 14us; 146us; 15us; 147us; 16us; 148us; 17us; 149us; 18us; 150us; 19us; 151us; 20us; 141us; 21us; 142us; 22us; 143us; 23us; 144us; 24us; 145us; 11us; 32768us; 1us; 155us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 29us; 175us; 30us; 122us; 31us; 124us; 45us; 116us; 46us; 171us; 47us; 172us; 14us; 32768us; 2us; 95us; 12us; 153us; 13us; 152us; 14us; 146us; 15us; 147us; 16us; 148us; 17us; 149us; 18us; 150us; 19us; 151us; 20us; 141us; 21us; 142us; 22us; 143us; 23us; 144us; 24us; 145us; 17us; 32768us; 1us; 155us; 3us; 37us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 27us; 55us; 29us; 175us; 30us; 122us; 31us; 124us; 32us; 50us; 34us; 67us; 35us; 88us; 37us; 76us; 45us; 116us; 46us; 171us; 47us; 172us; 0us; 16416us; 14us; 32768us; 12us; 153us; 13us; 152us; 14us; 146us; 15us; 147us; 16us; 148us; 17us; 149us; 18us; 150us; 19us; 151us; 20us; 141us; 21us; 142us; 22us; 143us; 23us; 144us; 24us; 145us; 36us; 98us; 1us; 32768us; 43us; 99us; 1us; 32768us; 1us; 100us; 1us; 32768us; 46us; 101us; 1us; 32768us; 8us; 102us; 1us; 32768us; 46us; 103us; 1us; 32768us; 2us; 104us; 17us; 32768us; 1us; 155us; 3us; 37us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 27us; 55us; 29us; 175us; 30us; 122us; 31us; 124us; 32us; 50us; 34us; 67us; 35us; 88us; 37us; 76us; 45us; 116us; 46us; 171us; 47us; 172us; 0us; 16417us; 0us; 16418us; 0us; 16419us; 0us; 16420us; 3us; 16421us; 2us; 162us; 5us; 166us; 9us; 114us; 2us; 16421us; 5us; 166us; 9us; 114us; 0us; 16422us; 1us; 16422us; 2us; 156us; 0us; 16423us; 11us; 32768us; 1us; 155us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 29us; 175us; 30us; 122us; 31us; 124us; 45us; 116us; 46us; 171us; 47us; 172us; 13us; 16424us; 12us; 153us; 13us; 152us; 14us; 146us; 15us; 147us; 16us; 148us; 17us; 149us; 18us; 150us; 19us; 151us; 20us; 141us; 21us; 142us; 22us; 143us; 23us; 144us; 24us; 145us; 1us; 16445us; 1us; 117us; 11us; 16450us; 1us; 155us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 29us; 175us; 30us; 122us; 31us; 124us; 45us; 116us; 46us; 171us; 47us; 172us; 1us; 32768us; 2us; 119us; 0us; 16425us; 11us; 32768us; 1us; 155us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 29us; 175us; 30us; 122us; 31us; 124us; 45us; 116us; 46us; 171us; 47us; 172us; 0us; 16426us; 11us; 32768us; 1us; 155us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 29us; 175us; 30us; 122us; 31us; 124us; 45us; 116us; 46us; 171us; 47us; 172us; 13us; 16427us; 12us; 153us; 13us; 152us; 14us; 146us; 15us; 147us; 16us; 148us; 17us; 149us; 18us; 150us; 19us; 151us; 20us; 141us; 21us; 142us; 22us; 143us; 23us; 144us; 24us; 145us; 0us; 16428us; 3us; 16429us; 22us; 143us; 23us; 144us; 24us; 145us; 3us; 16430us; 22us; 143us; 23us; 144us; 24us; 145us; 0us; 16431us; 0us; 16432us; 0us; 16433us; 9us; 16434us; 16us; 148us; 17us; 149us; 18us; 150us; 19us; 151us; 20us; 141us; 21us; 142us; 22us; 143us; 23us; 144us; 24us; 145us; 9us; 16435us; 16us; 148us; 17us; 149us; 18us; 150us; 19us; 151us; 20us; 141us; 21us; 142us; 22us; 143us; 23us; 144us; 24us; 145us; 9us; 16436us; 16us; 148us; 17us; 149us; 18us; 150us; 19us; 151us; 20us; 141us; 21us; 142us; 22us; 143us; 23us; 144us; 24us; 145us; 9us; 16437us; 16us; 148us; 17us; 149us; 18us; 150us; 19us; 151us; 20us; 141us; 21us; 142us; 22us; 143us; 23us; 144us; 24us; 145us; 9us; 16438us; 16us; 148us; 17us; 149us; 18us; 150us; 19us; 151us; 20us; 141us; 21us; 142us; 22us; 143us; 23us; 144us; 24us; 145us; 9us; 16439us; 16us; 148us; 17us; 149us; 18us; 150us; 19us; 151us; 20us; 141us; 21us; 142us; 22us; 143us; 23us; 144us; 24us; 145us; 11us; 16440us; 14us; 146us; 15us; 147us; 16us; 148us; 17us; 149us; 18us; 150us; 19us; 151us; 20us; 141us; 21us; 142us; 22us; 143us; 23us; 144us; 24us; 145us; 13us; 32768us; 12us; 153us; 13us; 152us; 14us; 146us; 15us; 147us; 16us; 148us; 17us; 149us; 18us; 150us; 19us; 151us; 20us; 141us; 21us; 142us; 22us; 143us; 23us; 144us; 24us; 145us; 12us; 16441us; 13us; 152us; 14us; 146us; 15us; 147us; 16us; 148us; 17us; 149us; 18us; 150us; 19us; 151us; 20us; 141us; 21us; 142us; 22us; 143us; 23us; 144us; 24us; 145us; 14us; 32768us; 6us; 167us; 12us; 153us; 13us; 152us; 14us; 146us; 15us; 147us; 16us; 148us; 17us; 149us; 18us; 150us; 19us; 151us; 20us; 141us; 21us; 142us; 22us; 143us; 23us; 144us; 24us; 145us; 14us; 16452us; 8us; 169us; 12us; 153us; 13us; 152us; 14us; 146us; 15us; 147us; 16us; 148us; 17us; 149us; 18us; 150us; 19us; 151us; 20us; 141us; 21us; 142us; 22us; 143us; 23us; 144us; 24us; 145us; 11us; 32768us; 1us; 155us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 29us; 175us; 30us; 122us; 31us; 124us; 45us; 116us; 46us; 171us; 47us; 172us; 11us; 32768us; 1us; 155us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 29us; 175us; 30us; 122us; 31us; 124us; 45us; 116us; 46us; 171us; 47us; 172us; 11us; 32768us; 1us; 155us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 29us; 175us; 30us; 122us; 31us; 124us; 45us; 116us; 46us; 171us; 47us; 172us; 11us; 32768us; 1us; 155us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 29us; 175us; 30us; 122us; 31us; 124us; 45us; 116us; 46us; 171us; 47us; 172us; 11us; 32768us; 1us; 155us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 29us; 175us; 30us; 122us; 31us; 124us; 45us; 116us; 46us; 171us; 47us; 172us; 11us; 32768us; 1us; 155us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 29us; 175us; 30us; 122us; 31us; 124us; 45us; 116us; 46us; 171us; 47us; 172us; 11us; 32768us; 1us; 155us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 29us; 175us; 30us; 122us; 31us; 124us; 45us; 116us; 46us; 171us; 47us; 172us; 11us; 32768us; 1us; 155us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 29us; 175us; 30us; 122us; 31us; 124us; 45us; 116us; 46us; 171us; 47us; 172us; 11us; 32768us; 1us; 155us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 29us; 175us; 30us; 122us; 31us; 124us; 45us; 116us; 46us; 171us; 47us; 172us; 11us; 32768us; 1us; 155us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 29us; 175us; 30us; 122us; 31us; 124us; 45us; 116us; 46us; 171us; 47us; 172us; 11us; 32768us; 1us; 155us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 29us; 175us; 30us; 122us; 31us; 124us; 45us; 116us; 46us; 171us; 47us; 172us; 11us; 32768us; 1us; 155us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 29us; 175us; 30us; 122us; 31us; 124us; 45us; 116us; 46us; 171us; 47us; 172us; 11us; 32768us; 1us; 155us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 29us; 175us; 30us; 122us; 31us; 124us; 45us; 116us; 46us; 171us; 47us; 172us; 0us; 16442us; 11us; 32768us; 1us; 155us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 29us; 175us; 30us; 122us; 31us; 124us; 45us; 116us; 46us; 171us; 47us; 172us; 0us; 16443us; 3us; 32768us; 1us; 160us; 22us; 163us; 45us; 159us; 1us; 16444us; 5us; 166us; 0us; 16445us; 3us; 32768us; 1us; 160us; 22us; 163us; 45us; 159us; 2us; 32768us; 2us; 162us; 5us; 166us; 0us; 16446us; 8us; 32768us; 1us; 155us; 10us; 157us; 21us; 173us; 22us; 163us; 29us; 175us; 45us; 159us; 46us; 171us; 47us; 172us; 1us; 16447us; 5us; 166us; 0us; 16448us; 11us; 32768us; 1us; 155us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 29us; 175us; 30us; 122us; 31us; 124us; 45us; 116us; 46us; 171us; 47us; 172us; 0us; 16449us; 0us; 16451us; 11us; 32768us; 1us; 155us; 10us; 157us; 11us; 120us; 21us; 173us; 22us; 163us; 29us; 175us; 30us; 122us; 31us; 124us; 45us; 116us; 46us; 171us; 47us; 172us; 0us; 16453us; 0us; 16454us; 0us; 16455us; 1us; 32768us; 46us; 174us; 0us; 16456us; 0us; 16457us; 0us; 16458us; 0us; 16459us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 4us; 5us; 7us; 8us; 12us; 13us; 15us; 16us; 17us; 21us; 25us; 27us; 28us; 30us; 34us; 36us; 40us; 43us; 44us; 47us; 48us; 50us; 51us; 53us; 55us; 58us; 60us; 62us; 63us; 66us; 68us; 70us; 71us; 72us; 74us; 77us; 78us; 98us; 100us; 101us; 121us; 122us; 124us; 144us; 145us; 146us; 148us; 149us; 164us; 165us; 178us; 179us; 194us; 195us; 196us; 198us; 200us; 212us; 224us; 239us; 254us; 272us; 290us; 292us; 310us; 328us; 329us; 331us; 333us; 345us; 357us; 372us; 387us; 405us; 423us; 424us; 442us; 445us; 447us; 459us; 474us; 476us; 477us; 479us; 491us; 506us; 508us; 509us; 521us; 533us; 548us; 560us; 575us; 587us; 602us; 620us; 621us; 636us; 638us; 640us; 642us; 644us; 646us; 648us; 666us; 667us; 668us; 669us; 670us; 674us; 677us; 678us; 680us; 681us; 693us; 707us; 709us; 721us; 723us; 724us; 736us; 737us; 749us; 763us; 764us; 768us; 772us; 773us; 774us; 775us; 785us; 795us; 805us; 815us; 825us; 835us; 847us; 861us; 874us; 889us; 904us; 916us; 928us; 940us; 952us; 964us; 976us; 988us; 1000us; 1012us; 1024us; 1036us; 1048us; 1060us; 1061us; 1073us; 1074us; 1078us; 1080us; 1081us; 1085us; 1088us; 1089us; 1098us; 1100us; 1101us; 1113us; 1114us; 1115us; 1127us; 1128us; 1129us; 1130us; 1132us; 1133us; 1134us; 1135us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 1us; 2us; 1us; 2us; 3us; 3us; 4us; 6us; 6us; 0us; 1us; 1us; 3us; 3us; 0us; 2us; 3us; 1us; 1us; 2us; 2us; 3us; 1us; 7us; 5us; 7us; 7us; 9us; 10us; 7us; 5us; 5us; 1us; 1us; 1us; 3us; 4us; 2us; 2us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 3us; 2us; 1us; 3us; 2us; 2us; 4us; 0us; 1us; 1us; 3us; 1us; 1us; 2us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 4us; 5us; 5us; 5us; 5us; 5us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 10us; 10us; 10us; 11us; 11us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 13us; 13us; 13us; 14us; 14us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 16us; 16us; 16us; 17us; 17us; 17us; 17us; 17us; 18us; 18us; 19us; 19us; 20us; 20us; 20us; 20us; 21us; 21us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16387us; 65535us; 16388us; 16389us; 65535us; 65535us; 65535us; 16391us; 65535us; 65535us; 65535us; 65535us; 65535us; 16393us; 65535us; 16394us; 65535us; 16395us; 65535us; 65535us; 65535us; 65535us; 65535us; 16396us; 65535us; 65535us; 65535us; 16397us; 16399us; 65535us; 65535us; 16401us; 65535us; 65535us; 16402us; 65535us; 16404us; 65535us; 65535us; 16405us; 16406us; 65535us; 16407us; 65535us; 16408us; 65535us; 16409us; 65535us; 16410us; 16411us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16412us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16413us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16414us; 65535us; 65535us; 65535us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16416us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16417us; 16418us; 16419us; 16420us; 65535us; 65535us; 16422us; 65535us; 16423us; 65535us; 65535us; 65535us; 65535us; 65535us; 16425us; 65535us; 65535us; 65535us; 65535us; 16428us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16442us; 65535us; 16443us; 65535us; 65535us; 16445us; 65535us; 65535us; 16446us; 65535us; 65535us; 16448us; 65535us; 16449us; 16451us; 65535us; 16453us; 16454us; 16455us; 65535us; 16456us; 16457us; 16458us; 16459us; |]
let _fsyacc_reductions ()  =    [| 
# 455 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 464 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 44 "CPar.fsy"
                                                               Prog _1 
                   )
# 44 "CPar.fsy"
                 : Absyn.program));
# 475 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 49 "CPar.fsy"
                                                               [] 
                   )
# 49 "CPar.fsy"
                 : 'gentype_Topdecs));
# 485 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 50 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 50 "CPar.fsy"
                 : 'gentype_Topdecs));
# 497 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 54 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 54 "CPar.fsy"
                 : 'gentype_Topdec));
# 508 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 55 "CPar.fsy"
                                                               _1 
                   )
# 55 "CPar.fsy"
                 : 'gentype_Topdec));
# 519 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 73 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 73 "CPar.fsy"
                 : 'gentype_Vardec));
# 531 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 84 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 84 "CPar.fsy"
                 : 'gentype_Vardesc));
# 542 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 89 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 89 "CPar.fsy"
                 : 'gentype_Vardesc));
# 553 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 91 "CPar.fsy"
                                                               _2                                      
                   )
# 91 "CPar.fsy"
                 : 'gentype_Vardesc));
# 564 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 93 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 93 "CPar.fsy"
                 : 'gentype_Vardesc));
# 575 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 95 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 95 "CPar.fsy"
                 : 'gentype_Vardesc));
# 587 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 100 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 100 "CPar.fsy"
                 : 'gentype_Fundec));
# 600 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 102 "CPar.fsy"
                 : 'gentype_Fundec));
# 614 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "CPar.fsy"
                                                               [] 
                   )
# 107 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 624 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 "CPar.fsy"
                                                               _1 
                   )
# 108 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 635 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 "CPar.fsy"
                                                               [_1]     
                   )
# 112 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 646 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 113 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 658 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 "CPar.fsy"
                                                               Block _2 
                   )
# 118 "CPar.fsy"
                 : 'gentype_Block));
# 669 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 122 "CPar.fsy"
                                                               [] 
                   )
# 122 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 679 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 123 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 691 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 124 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 703 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 "CPar.fsy"
                                                               _1 
                   )
# 128 "CPar.fsy"
                 : 'gentype_Stmt));
# 714 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 "CPar.fsy"
                                                               _1 
                   )
# 129 "CPar.fsy"
                 : 'gentype_Stmt));
# 725 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 "CPar.fsy"
                                                               Expr(_1)             
                   )
# 133 "CPar.fsy"
                 : 'gentype_StmtM));
# 736 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "CPar.fsy"
                                                               Return None          
                   )
# 134 "CPar.fsy"
                 : 'gentype_StmtM));
# 746 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "CPar.fsy"
                                                               Return(Some(_2))     
                   )
# 135 "CPar.fsy"
                 : 'gentype_StmtM));
# 757 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "CPar.fsy"
                                                               _1                   
                   )
# 136 "CPar.fsy"
                 : 'gentype_StmtM));
# 768 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 137 "CPar.fsy"
                 : 'gentype_StmtM));
# 781 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 138 "CPar.fsy"
                 : 'gentype_StmtM));
# 793 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "CPar.fsy"
                                                               Dowhile(_2,_5)       
                   )
# 139 "CPar.fsy"
                 : 'gentype_StmtM));
# 805 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "CPar.fsy"
                                                               Dountil(_2,_5)       
                   )
# 140 "CPar.fsy"
                 : 'gentype_StmtM));
# 817 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "CPar.fsy"
                                                                         For(_3,_5,_7,_9)     
                   )
# 141 "CPar.fsy"
                 : 'gentype_StmtM));
# 831 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            let _6 = parseState.GetInput(6) :?> int in
            let _8 = parseState.GetInput(8) :?> int in
            let _10 = parseState.GetInput(10) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "CPar.fsy"
                                                                                 Forinrange(_2,_6,_8,_10)     
                   )
# 142 "CPar.fsy"
                 : 'gentype_StmtM));
# 845 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "CPar.fsy"
                                                                     If(_3, _5, _7)       
                   )
# 146 "CPar.fsy"
                 : 'gentype_StmtU));
# 858 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "CPar.fsy"
                                                                     If(_3, _5, Block []) 
                   )
# 147 "CPar.fsy"
                 : 'gentype_StmtU));
# 870 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "CPar.fsy"
                                                                     While(_3, _5)        
                   )
# 148 "CPar.fsy"
                 : 'gentype_StmtU));
# 882 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "CPar.fsy"
                                                               Access _1           
                   )
# 152 "CPar.fsy"
                 : 'gentype_Expr));
# 893 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "CPar.fsy"
                                                               _1                  
                   )
# 153 "CPar.fsy"
                 : 'gentype_Expr));
# 904 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "CPar.fsy"
                                                               _1                  
                   )
# 157 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 915 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 "CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 158 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 927 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 "CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 159 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 939 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 160 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 950 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 "CPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 161 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 961 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 "CPar.fsy"
                                                               Prim1("printc", nl) 
                   )
# 162 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 971 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 "CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 163 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 983 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 "CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 164 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 995 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 165 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1007 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 166 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1019 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 167 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1031 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 168 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1043 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 169 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1055 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 170 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1067 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 171 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1079 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 172 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1091 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 173 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1103 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 174 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1115 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 175 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1127 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "CPar.fsy"
                                                               CstI _1             
                   )
# 183 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1138 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "CPar.fsy"
                                                               _2                  
                   )
# 184 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1149 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "CPar.fsy"
                                                               Addr _2             
                   )
# 185 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1160 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "CPar.fsy"
                                                               AccVar _1           
                   )
# 189 "CPar.fsy"
                 : 'gentype_Access));
# 1171 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "CPar.fsy"
                                                               _2                  
                   )
# 190 "CPar.fsy"
                 : 'gentype_Access));
# 1182 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 191 "CPar.fsy"
                 : 'gentype_Access));
# 1193 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 192 "CPar.fsy"
                 : 'gentype_Access));
# 1204 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 193 "CPar.fsy"
                 : 'gentype_Access));
# 1216 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 197 "CPar.fsy"
                                                               []       
                   )
# 197 "CPar.fsy"
                 : 'gentype_Exprs));
# 1226 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 "CPar.fsy"
                                                               _1       
                   )
# 198 "CPar.fsy"
                 : 'gentype_Exprs));
# 1237 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 202 "CPar.fsy"
                                                               [_1]     
                   )
# 202 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1248 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 203 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 203 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1260 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 207 "CPar.fsy"
                                                               _1       
                   )
# 207 "CPar.fsy"
                 : 'gentype_Const));
# 1271 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 208 "CPar.fsy"
                                                               _1       
                   )
# 208 "CPar.fsy"
                 : 'gentype_Const));
# 1282 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 209 "CPar.fsy"
                                                               - _2     
                   )
# 209 "CPar.fsy"
                 : 'gentype_Const));
# 1293 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 210 "CPar.fsy"
                                                               -1       
                   )
# 210 "CPar.fsy"
                 : 'gentype_Const));
# 1303 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 214 "CPar.fsy"
                                                               TypI     
                   )
# 214 "CPar.fsy"
                 : 'gentype_Type));
# 1313 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 215 "CPar.fsy"
                                                               TypC     
                   )
# 215 "CPar.fsy"
                 : 'gentype_Type));
|]
# 1324 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 51;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _

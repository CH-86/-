// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)
open Absyn

// Vardesc 返回的是一个 元组 (g,s)
// g是类型构造函数，s是变量名
// compose1 函数 取出 类型构造子 g，用类型复合机制构造类型。

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10 //  \n 的 ASCII 码

# 22 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | PLUSASSIGN
  | MINUSASSIGN
  | TIMESASSIGN
  | DIVASSIGN
  | NOT
  | SEQOR
  | SEQAND
  | QUESTION
  | COLON
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | POW
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | ONEPLUS
  | ONEMINUS
  | WHILE
  | FOR
  | IN
  | DO
  | DOUNTIL
  | DOWHILE
  | UNTIL
  | SWITCH
  | CASE
  | LEN
  | CHAR
  | ELSE
  | IF
  | INT
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | RANGE
  | DEFAULT
  | CONTINUE
  | EXIT
  | PASS
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTCHAR of (char)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_PLUSASSIGN
    | TOKEN_MINUSASSIGN
    | TOKEN_TIMESASSIGN
    | TOKEN_DIVASSIGN
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_QUESTION
    | TOKEN_COLON
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_POW
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_ONEPLUS
    | TOKEN_ONEMINUS
    | TOKEN_WHILE
    | TOKEN_FOR
    | TOKEN_IN
    | TOKEN_DO
    | TOKEN_DOUNTIL
    | TOKEN_DOWHILE
    | TOKEN_UNTIL
    | TOKEN_SWITCH
    | TOKEN_CASE
    | TOKEN_LEN
    | TOKEN_CHAR
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_RANGE
    | TOKEN_DEFAULT
    | TOKEN_CONTINUE
    | TOKEN_EXIT
    | TOKEN_PASS
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTCHAR
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_Type
    | NONTERM_StmtS

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | PLUSASSIGN  -> 11 
  | MINUSASSIGN  -> 12 
  | TIMESASSIGN  -> 13 
  | DIVASSIGN  -> 14 
  | NOT  -> 15 
  | SEQOR  -> 16 
  | SEQAND  -> 17 
  | QUESTION  -> 18 
  | COLON  -> 19 
  | EQ  -> 20 
  | NE  -> 21 
  | GT  -> 22 
  | LT  -> 23 
  | GE  -> 24 
  | LE  -> 25 
  | POW  -> 26 
  | PLUS  -> 27 
  | MINUS  -> 28 
  | TIMES  -> 29 
  | DIV  -> 30 
  | MOD  -> 31 
  | ONEPLUS  -> 32 
  | ONEMINUS  -> 33 
  | WHILE  -> 34 
  | FOR  -> 35 
  | IN  -> 36 
  | DO  -> 37 
  | DOUNTIL  -> 38 
  | DOWHILE  -> 39 
  | UNTIL  -> 40 
  | SWITCH  -> 41 
  | CASE  -> 42 
  | LEN  -> 43 
  | CHAR  -> 44 
  | ELSE  -> 45 
  | IF  -> 46 
  | INT  -> 47 
  | NULL  -> 48 
  | PRINT  -> 49 
  | PRINTLN  -> 50 
  | RETURN  -> 51 
  | VOID  -> 52 
  | RANGE  -> 53 
  | DEFAULT  -> 54 
  | CONTINUE  -> 55 
  | EXIT  -> 56 
  | PASS  -> 57 
  | CSTSTRING _ -> 58 
  | NAME _ -> 59 
  | CSTCHAR _ -> 60 
  | CSTINT _ -> 61 
  | CSTBOOL _ -> 62 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_PLUSASSIGN 
  | 12 -> TOKEN_MINUSASSIGN 
  | 13 -> TOKEN_TIMESASSIGN 
  | 14 -> TOKEN_DIVASSIGN 
  | 15 -> TOKEN_NOT 
  | 16 -> TOKEN_SEQOR 
  | 17 -> TOKEN_SEQAND 
  | 18 -> TOKEN_QUESTION 
  | 19 -> TOKEN_COLON 
  | 20 -> TOKEN_EQ 
  | 21 -> TOKEN_NE 
  | 22 -> TOKEN_GT 
  | 23 -> TOKEN_LT 
  | 24 -> TOKEN_GE 
  | 25 -> TOKEN_LE 
  | 26 -> TOKEN_POW 
  | 27 -> TOKEN_PLUS 
  | 28 -> TOKEN_MINUS 
  | 29 -> TOKEN_TIMES 
  | 30 -> TOKEN_DIV 
  | 31 -> TOKEN_MOD 
  | 32 -> TOKEN_ONEPLUS 
  | 33 -> TOKEN_ONEMINUS 
  | 34 -> TOKEN_WHILE 
  | 35 -> TOKEN_FOR 
  | 36 -> TOKEN_IN 
  | 37 -> TOKEN_DO 
  | 38 -> TOKEN_DOUNTIL 
  | 39 -> TOKEN_DOWHILE 
  | 40 -> TOKEN_UNTIL 
  | 41 -> TOKEN_SWITCH 
  | 42 -> TOKEN_CASE 
  | 43 -> TOKEN_LEN 
  | 44 -> TOKEN_CHAR 
  | 45 -> TOKEN_ELSE 
  | 46 -> TOKEN_IF 
  | 47 -> TOKEN_INT 
  | 48 -> TOKEN_NULL 
  | 49 -> TOKEN_PRINT 
  | 50 -> TOKEN_PRINTLN 
  | 51 -> TOKEN_RETURN 
  | 52 -> TOKEN_VOID 
  | 53 -> TOKEN_RANGE 
  | 54 -> TOKEN_DEFAULT 
  | 55 -> TOKEN_CONTINUE 
  | 56 -> TOKEN_EXIT 
  | 57 -> TOKEN_PASS 
  | 58 -> TOKEN_CSTSTRING 
  | 59 -> TOKEN_NAME 
  | 60 -> TOKEN_CSTCHAR 
  | 61 -> TOKEN_CSTINT 
  | 62 -> TOKEN_CSTBOOL 
  | 65 -> TOKEN_end_of_input
  | 63 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Vardec 
    | 7 -> NONTERM_Vardesc 
    | 8 -> NONTERM_Vardesc 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Fundec 
    | 13 -> NONTERM_Fundec 
    | 14 -> NONTERM_Paramdecs 
    | 15 -> NONTERM_Paramdecs 
    | 16 -> NONTERM_Paramdecs1 
    | 17 -> NONTERM_Paramdecs1 
    | 18 -> NONTERM_Block 
    | 19 -> NONTERM_StmtOrDecSeq 
    | 20 -> NONTERM_StmtOrDecSeq 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_Stmt 
    | 23 -> NONTERM_Stmt 
    | 24 -> NONTERM_StmtM 
    | 25 -> NONTERM_StmtM 
    | 26 -> NONTERM_StmtM 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtM 
    | 33 -> NONTERM_StmtM 
    | 34 -> NONTERM_StmtM 
    | 35 -> NONTERM_StmtM 
    | 36 -> NONTERM_StmtM 
    | 37 -> NONTERM_StmtU 
    | 38 -> NONTERM_StmtU 
    | 39 -> NONTERM_StmtU 
    | 40 -> NONTERM_Expr 
    | 41 -> NONTERM_Expr 
    | 42 -> NONTERM_ExprNotAccess 
    | 43 -> NONTERM_ExprNotAccess 
    | 44 -> NONTERM_ExprNotAccess 
    | 45 -> NONTERM_ExprNotAccess 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_ExprNotAccess 
    | 60 -> NONTERM_ExprNotAccess 
    | 61 -> NONTERM_ExprNotAccess 
    | 62 -> NONTERM_ExprNotAccess 
    | 63 -> NONTERM_ExprNotAccess 
    | 64 -> NONTERM_ExprNotAccess 
    | 65 -> NONTERM_ExprNotAccess 
    | 66 -> NONTERM_ExprNotAccess 
    | 67 -> NONTERM_ExprNotAccess 
    | 68 -> NONTERM_ExprNotAccess 
    | 69 -> NONTERM_ExprNotAccess 
    | 70 -> NONTERM_AtExprNotAccess 
    | 71 -> NONTERM_AtExprNotAccess 
    | 72 -> NONTERM_AtExprNotAccess 
    | 73 -> NONTERM_Access 
    | 74 -> NONTERM_Access 
    | 75 -> NONTERM_Access 
    | 76 -> NONTERM_Access 
    | 77 -> NONTERM_Access 
    | 78 -> NONTERM_Exprs 
    | 79 -> NONTERM_Exprs 
    | 80 -> NONTERM_Exprs1 
    | 81 -> NONTERM_Exprs1 
    | 82 -> NONTERM_Const 
    | 83 -> NONTERM_Const 
    | 84 -> NONTERM_Const 
    | 85 -> NONTERM_Const 
    | 86 -> NONTERM_Type 
    | 87 -> NONTERM_StmtS 
    | 88 -> NONTERM_StmtS 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 65 
let _fsyacc_tagOfErrorTerminal = 63

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | PLUSASSIGN  -> "PLUSASSIGN" 
  | MINUSASSIGN  -> "MINUSASSIGN" 
  | TIMESASSIGN  -> "TIMESASSIGN" 
  | DIVASSIGN  -> "DIVASSIGN" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | QUESTION  -> "QUESTION" 
  | COLON  -> "COLON" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | POW  -> "POW" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | ONEPLUS  -> "ONEPLUS" 
  | ONEMINUS  -> "ONEMINUS" 
  | WHILE  -> "WHILE" 
  | FOR  -> "FOR" 
  | IN  -> "IN" 
  | DO  -> "DO" 
  | DOUNTIL  -> "DOUNTIL" 
  | DOWHILE  -> "DOWHILE" 
  | UNTIL  -> "UNTIL" 
  | SWITCH  -> "SWITCH" 
  | CASE  -> "CASE" 
  | LEN  -> "LEN" 
  | CHAR  -> "CHAR" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | RANGE  -> "RANGE" 
  | DEFAULT  -> "DEFAULT" 
  | CONTINUE  -> "CONTINUE" 
  | EXIT  -> "EXIT" 
  | PASS  -> "PASS" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTCHAR _ -> "CSTCHAR" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | PLUSASSIGN  -> (null : System.Object) 
  | MINUSASSIGN  -> (null : System.Object) 
  | TIMESASSIGN  -> (null : System.Object) 
  | DIVASSIGN  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | QUESTION  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | POW  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | ONEPLUS  -> (null : System.Object) 
  | ONEMINUS  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | DOUNTIL  -> (null : System.Object) 
  | DOWHILE  -> (null : System.Object) 
  | UNTIL  -> (null : System.Object) 
  | SWITCH  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | LEN  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | RANGE  -> (null : System.Object) 
  | DEFAULT  -> (null : System.Object) 
  | CONTINUE  -> (null : System.Object) 
  | EXIT  -> (null : System.Object) 
  | PASS  -> (null : System.Object) 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTCHAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 4us; 5us; 2us; 65535us; 0us; 4us; 4us; 4us; 8us; 65535us; 0us; 6us; 4us; 6us; 26us; 35us; 30us; 35us; 36us; 35us; 38us; 43us; 41us; 43us; 44us; 43us; 5us; 65535us; 9us; 11us; 10us; 11us; 14us; 15us; 16us; 17us; 51us; 19us; 2us; 65535us; 0us; 8us; 4us; 8us; 2us; 65535us; 26us; 27us; 30us; 31us; 3us; 65535us; 26us; 34us; 30us; 34us; 36us; 37us; 16us; 65535us; 28us; 29us; 32us; 33us; 38us; 59us; 41us; 59us; 44us; 59us; 66us; 59us; 67us; 59us; 69us; 59us; 70us; 59us; 78us; 59us; 79us; 59us; 81us; 59us; 100us; 59us; 109us; 59us; 210us; 59us; 214us; 59us; 3us; 65535us; 38us; 39us; 41us; 42us; 44us; 45us; 4us; 65535us; 38us; 41us; 41us; 41us; 44us; 41us; 67us; 119us; 14us; 65535us; 38us; 46us; 41us; 46us; 44us; 46us; 66us; 68us; 67us; 47us; 69us; 71us; 70us; 71us; 78us; 80us; 79us; 80us; 81us; 82us; 100us; 101us; 109us; 110us; 210us; 211us; 214us; 215us; 6us; 65535us; 38us; 48us; 41us; 48us; 44us; 48us; 67us; 48us; 70us; 118us; 79us; 120us; 54us; 65535us; 38us; 53us; 41us; 53us; 44us; 53us; 55us; 57us; 62us; 65us; 63us; 64us; 66us; 53us; 67us; 53us; 69us; 53us; 70us; 53us; 74us; 77us; 75us; 76us; 78us; 53us; 79us; 53us; 81us; 53us; 84us; 85us; 89us; 90us; 94us; 95us; 96us; 97us; 98us; 99us; 100us; 53us; 109us; 53us; 112us; 113us; 126us; 127us; 129us; 168us; 136us; 137us; 138us; 139us; 140us; 141us; 142us; 143us; 144us; 145us; 146us; 147us; 148us; 149us; 170us; 150us; 171us; 151us; 172us; 152us; 173us; 153us; 174us; 154us; 175us; 155us; 176us; 156us; 177us; 157us; 178us; 158us; 179us; 159us; 180us; 160us; 181us; 161us; 182us; 162us; 183us; 163us; 184us; 164us; 185us; 166us; 187us; 165us; 198us; 167us; 201us; 168us; 210us; 53us; 213us; 169us; 214us; 53us; 54us; 65535us; 38us; 123us; 41us; 123us; 44us; 123us; 55us; 123us; 62us; 123us; 63us; 123us; 66us; 123us; 67us; 123us; 69us; 123us; 70us; 123us; 74us; 123us; 75us; 123us; 78us; 123us; 79us; 123us; 81us; 123us; 84us; 123us; 89us; 123us; 94us; 123us; 96us; 123us; 98us; 123us; 100us; 123us; 109us; 123us; 112us; 123us; 126us; 123us; 129us; 123us; 136us; 123us; 138us; 123us; 140us; 123us; 142us; 123us; 144us; 123us; 146us; 123us; 148us; 123us; 170us; 123us; 171us; 123us; 172us; 123us; 173us; 123us; 174us; 123us; 175us; 123us; 176us; 123us; 177us; 123us; 178us; 123us; 179us; 123us; 180us; 123us; 181us; 123us; 182us; 123us; 183us; 123us; 184us; 123us; 185us; 123us; 187us; 124us; 198us; 123us; 201us; 123us; 210us; 123us; 213us; 123us; 214us; 123us; 55us; 65535us; 38us; 125us; 41us; 125us; 44us; 125us; 55us; 125us; 62us; 125us; 63us; 125us; 66us; 125us; 67us; 125us; 69us; 125us; 70us; 125us; 74us; 125us; 75us; 125us; 78us; 125us; 79us; 125us; 81us; 125us; 84us; 125us; 89us; 125us; 94us; 125us; 96us; 125us; 98us; 125us; 100us; 125us; 109us; 125us; 112us; 125us; 126us; 125us; 129us; 125us; 136us; 125us; 138us; 125us; 140us; 125us; 142us; 125us; 144us; 125us; 146us; 125us; 148us; 125us; 170us; 125us; 171us; 125us; 172us; 125us; 173us; 125us; 174us; 125us; 175us; 125us; 176us; 125us; 177us; 125us; 178us; 125us; 179us; 125us; 180us; 125us; 181us; 125us; 182us; 125us; 183us; 125us; 184us; 125us; 185us; 125us; 187us; 125us; 195us; 197us; 198us; 125us; 201us; 125us; 210us; 125us; 213us; 125us; 214us; 125us; 60us; 65535us; 38us; 122us; 41us; 122us; 44us; 122us; 55us; 122us; 62us; 122us; 63us; 122us; 66us; 122us; 67us; 122us; 69us; 122us; 70us; 122us; 74us; 122us; 75us; 122us; 78us; 122us; 79us; 122us; 81us; 122us; 84us; 122us; 89us; 122us; 93us; 102us; 94us; 121us; 96us; 122us; 98us; 122us; 100us; 122us; 109us; 122us; 112us; 122us; 126us; 122us; 129us; 122us; 132us; 133us; 134us; 135us; 136us; 122us; 138us; 122us; 140us; 122us; 142us; 122us; 144us; 122us; 146us; 122us; 148us; 122us; 170us; 122us; 171us; 122us; 172us; 122us; 173us; 122us; 174us; 122us; 175us; 122us; 176us; 122us; 177us; 122us; 178us; 122us; 179us; 122us; 180us; 122us; 181us; 122us; 182us; 122us; 183us; 122us; 184us; 122us; 185us; 122us; 187us; 121us; 189us; 190us; 192us; 193us; 195us; 196us; 198us; 122us; 201us; 122us; 210us; 122us; 213us; 122us; 214us; 122us; 1us; 65535us; 129us; 130us; 2us; 65535us; 129us; 200us; 201us; 202us; 55us; 65535us; 38us; 186us; 41us; 186us; 44us; 186us; 55us; 186us; 62us; 186us; 63us; 186us; 66us; 186us; 67us; 186us; 69us; 186us; 70us; 186us; 74us; 186us; 75us; 186us; 78us; 186us; 79us; 186us; 81us; 186us; 84us; 186us; 89us; 186us; 94us; 186us; 96us; 186us; 98us; 186us; 100us; 186us; 109us; 186us; 112us; 186us; 126us; 186us; 129us; 186us; 136us; 186us; 138us; 186us; 140us; 186us; 142us; 186us; 144us; 186us; 146us; 186us; 148us; 186us; 170us; 186us; 171us; 186us; 172us; 186us; 173us; 186us; 174us; 186us; 175us; 186us; 176us; 186us; 177us; 186us; 178us; 186us; 179us; 186us; 180us; 186us; 181us; 186us; 182us; 186us; 183us; 186us; 184us; 186us; 185us; 186us; 187us; 186us; 195us; 186us; 198us; 186us; 201us; 186us; 210us; 186us; 213us; 186us; 214us; 186us; 8us; 65535us; 0us; 10us; 4us; 10us; 26us; 9us; 30us; 9us; 36us; 9us; 38us; 9us; 41us; 9us; 44us; 9us; 2us; 65535us; 115us; 116us; 216us; 217us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 18us; 24us; 27us; 30us; 34us; 51us; 55us; 60us; 75us; 82us; 137us; 192us; 248us; 309us; 311us; 314us; 370us; 379us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 6us; 2us; 6us; 13us; 3us; 6us; 10us; 11us; 1us; 7us; 2us; 7us; 13us; 1us; 8us; 3us; 8us; 10us; 11us; 1us; 9us; 3us; 9us; 10us; 11us; 1us; 9us; 3us; 10us; 11us; 25us; 2us; 10us; 11us; 1us; 10us; 1us; 11us; 1us; 11us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 15us; 2us; 16us; 17us; 1us; 17us; 1us; 17us; 1us; 18us; 1us; 18us; 1us; 18us; 1us; 20us; 1us; 20us; 1us; 21us; 1us; 21us; 1us; 21us; 1us; 22us; 3us; 22us; 30us; 37us; 1us; 23us; 1us; 24us; 1us; 25us; 1us; 25us; 1us; 25us; 16us; 26us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 1us; 26us; 2us; 27us; 28us; 1us; 27us; 16us; 28us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 1us; 28us; 1us; 29us; 1us; 30us; 3us; 30us; 37us; 38us; 1us; 30us; 3us; 30us; 37us; 38us; 18us; 30us; 37us; 38us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 16us; 30us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 1us; 30us; 3us; 30us; 37us; 38us; 1us; 30us; 1us; 30us; 2us; 30us; 37us; 1us; 30us; 1us; 31us; 2us; 31us; 39us; 1us; 31us; 2us; 31us; 39us; 17us; 31us; 39us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 16us; 31us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 1us; 31us; 2us; 31us; 39us; 1us; 31us; 2us; 32us; 33us; 2us; 32us; 33us; 1us; 32us; 1us; 32us; 16us; 32us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 1us; 32us; 1us; 32us; 1us; 33us; 1us; 33us; 16us; 33us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 1us; 33us; 1us; 33us; 2us; 34us; 35us; 2us; 34us; 74us; 16us; 34us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 1us; 34us; 16us; 34us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 1us; 34us; 16us; 34us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 1us; 34us; 1us; 34us; 2us; 35us; 77us; 1us; 35us; 1us; 35us; 1us; 35us; 1us; 35us; 1us; 35us; 1us; 35us; 1us; 35us; 1us; 35us; 1us; 36us; 1us; 36us; 16us; 36us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 1us; 36us; 1us; 36us; 1us; 36us; 1us; 36us; 1us; 37us; 1us; 38us; 1us; 39us; 8us; 40us; 43us; 51us; 52us; 53us; 54us; 74us; 77us; 7us; 40us; 43us; 51us; 52us; 53us; 54us; 77us; 1us; 41us; 2us; 41us; 71us; 1us; 42us; 1us; 43us; 16us; 43us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 2us; 44us; 73us; 1us; 44us; 1us; 44us; 1us; 44us; 1us; 45us; 2us; 45us; 77us; 1us; 46us; 2us; 46us; 77us; 1us; 47us; 16us; 47us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 1us; 48us; 16us; 48us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 2us; 49us; 50us; 16us; 50us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 1us; 51us; 16us; 51us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 1us; 52us; 16us; 52us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 1us; 53us; 16us; 53us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 1us; 54us; 16us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 16us; 55us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 16us; 55us; 56us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 16us; 55us; 56us; 57us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 16us; 55us; 56us; 57us; 58us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 16us; 55us; 56us; 57us; 58us; 59us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 16us; 55us; 56us; 57us; 58us; 59us; 60us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 16us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 16us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 16us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 16us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 64us; 65us; 66us; 67us; 68us; 69us; 16us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 65us; 66us; 67us; 68us; 69us; 16us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 66us; 67us; 68us; 69us; 16us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 67us; 68us; 69us; 16us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 67us; 68us; 69us; 16us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 68us; 69us; 15us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 16us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 69us; 16us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 77us; 17us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 80us; 81us; 16us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 88us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 62us; 1us; 63us; 1us; 64us; 1us; 65us; 1us; 66us; 1us; 67us; 1us; 67us; 1us; 68us; 1us; 69us; 1us; 70us; 2us; 71us; 74us; 1us; 71us; 1us; 72us; 2us; 72us; 77us; 1us; 73us; 1us; 74us; 2us; 74us; 77us; 1us; 74us; 2us; 75us; 76us; 2us; 75us; 77us; 1us; 76us; 1us; 77us; 1us; 77us; 1us; 79us; 1us; 81us; 1us; 81us; 1us; 82us; 1us; 83us; 1us; 84us; 1us; 84us; 1us; 85us; 1us; 86us; 1us; 87us; 1us; 87us; 1us; 87us; 1us; 87us; 1us; 88us; 1us; 88us; 1us; 88us; 1us; 88us; 1us; 88us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 23us; 27us; 29us; 32us; 34us; 38us; 40us; 44us; 46us; 50us; 53us; 55us; 57us; 59us; 61us; 63us; 65us; 67us; 69us; 71us; 73us; 75us; 77us; 79us; 81us; 84us; 86us; 88us; 90us; 92us; 94us; 96us; 98us; 100us; 102us; 104us; 106us; 110us; 112us; 114us; 116us; 118us; 120us; 137us; 139us; 142us; 144us; 161us; 163us; 165us; 167us; 171us; 173us; 177us; 196us; 213us; 215us; 219us; 221us; 223us; 226us; 228us; 230us; 233us; 235us; 238us; 256us; 273us; 275us; 278us; 280us; 283us; 286us; 288us; 290us; 307us; 309us; 311us; 313us; 315us; 332us; 334us; 336us; 339us; 342us; 359us; 361us; 378us; 380us; 397us; 399us; 401us; 404us; 406us; 408us; 410us; 412us; 414us; 416us; 418us; 420us; 422us; 424us; 441us; 443us; 445us; 447us; 449us; 451us; 453us; 455us; 464us; 472us; 474us; 477us; 479us; 481us; 498us; 501us; 503us; 505us; 507us; 509us; 512us; 514us; 517us; 519us; 536us; 538us; 555us; 558us; 575us; 577us; 594us; 596us; 613us; 615us; 632us; 634us; 651us; 668us; 685us; 702us; 719us; 736us; 753us; 770us; 787us; 804us; 821us; 838us; 855us; 872us; 889us; 906us; 922us; 939us; 956us; 974us; 991us; 993us; 995us; 997us; 999us; 1001us; 1003us; 1005us; 1007us; 1009us; 1011us; 1013us; 1015us; 1017us; 1019us; 1021us; 1023us; 1025us; 1028us; 1030us; 1032us; 1035us; 1037us; 1039us; 1042us; 1044us; 1047us; 1050us; 1052us; 1054us; 1056us; 1058us; 1060us; 1062us; 1064us; 1066us; 1068us; 1070us; 1072us; 1074us; 1076us; 1078us; 1080us; 1082us; 1084us; 1086us; 1088us; 1090us; |]
let _fsyacc_action_rows = 218
let _fsyacc_actionTableElements = [|2us; 16386us; 47us; 208us; 52us; 24us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 2us; 16386us; 47us; 208us; 52us; 24us; 0us; 16387us; 1us; 32768us; 7us; 7us; 0us; 16388us; 0us; 16389us; 3us; 32768us; 1us; 16us; 29us; 14us; 59us; 12us; 3us; 32768us; 1us; 16us; 29us; 14us; 59us; 13us; 1us; 16390us; 5us; 20us; 0us; 16391us; 1us; 16391us; 1us; 30us; 3us; 32768us; 1us; 16us; 29us; 14us; 59us; 12us; 1us; 16392us; 5us; 20us; 3us; 32768us; 1us; 16us; 29us; 14us; 59us; 12us; 2us; 32768us; 2us; 18us; 5us; 20us; 0us; 16393us; 2us; 32768us; 2us; 52us; 5us; 20us; 2us; 32768us; 6us; 21us; 61us; 22us; 0us; 16394us; 1us; 32768us; 6us; 23us; 0us; 16395us; 1us; 32768us; 59us; 25us; 1us; 32768us; 1us; 26us; 1us; 16398us; 47us; 208us; 1us; 32768us; 2us; 28us; 1us; 32768us; 3us; 38us; 0us; 16396us; 1us; 16398us; 47us; 208us; 1us; 32768us; 2us; 32us; 1us; 32768us; 3us; 38us; 0us; 16397us; 0us; 16399us; 1us; 16400us; 8us; 36us; 1us; 32768us; 47us; 208us; 0us; 16401us; 23us; 16403us; 1us; 187us; 3us; 38us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 34us; 73us; 35us; 93us; 37us; 81us; 41us; 111us; 43us; 50us; 46us; 61us; 47us; 208us; 48us; 207us; 49us; 138us; 50us; 140us; 51us; 55us; 57us; 49us; 59us; 128us; 61us; 203us; 62us; 204us; 1us; 32768us; 4us; 40us; 0us; 16402us; 23us; 16403us; 1us; 187us; 3us; 38us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 34us; 73us; 35us; 93us; 37us; 81us; 41us; 111us; 43us; 50us; 46us; 61us; 47us; 208us; 48us; 207us; 49us; 138us; 50us; 140us; 51us; 55us; 57us; 49us; 59us; 128us; 61us; 203us; 62us; 204us; 0us; 16404us; 1us; 32768us; 7us; 44us; 23us; 16403us; 1us; 187us; 3us; 38us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 34us; 73us; 35us; 93us; 37us; 81us; 41us; 111us; 43us; 50us; 46us; 61us; 47us; 208us; 48us; 207us; 49us; 138us; 50us; 140us; 51us; 55us; 57us; 49us; 59us; 128us; 61us; 203us; 62us; 204us; 0us; 16405us; 0us; 16406us; 1us; 16406us; 45us; 70us; 0us; 16407us; 0us; 16408us; 1us; 32768us; 1us; 51us; 3us; 32768us; 1us; 16us; 29us; 14us; 59us; 12us; 0us; 16409us; 16us; 32768us; 7us; 54us; 16us; 185us; 17us; 184us; 18us; 182us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 181us; 26us; 170us; 27us; 171us; 28us; 172us; 29us; 173us; 30us; 174us; 31us; 175us; 0us; 16410us; 14us; 32768us; 1us; 187us; 7us; 56us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 48us; 207us; 49us; 138us; 50us; 140us; 59us; 128us; 61us; 203us; 62us; 204us; 0us; 16411us; 16us; 32768us; 7us; 58us; 16us; 185us; 17us; 184us; 18us; 182us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 181us; 26us; 170us; 27us; 171us; 28us; 172us; 29us; 173us; 30us; 174us; 31us; 175us; 0us; 16412us; 0us; 16413us; 1us; 32768us; 1us; 62us; 1us; 32768us; 1us; 63us; 13us; 32768us; 1us; 187us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 48us; 207us; 49us; 138us; 50us; 140us; 59us; 128us; 61us; 203us; 62us; 204us; 13us; 32768us; 1us; 187us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 48us; 207us; 49us; 138us; 50us; 140us; 59us; 128us; 61us; 203us; 62us; 204us; 16us; 32768us; 2us; 67us; 16us; 185us; 17us; 184us; 18us; 182us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 181us; 26us; 170us; 27us; 171us; 28us; 172us; 29us; 173us; 30us; 174us; 31us; 175us; 16us; 32768us; 2us; 66us; 16us; 185us; 17us; 184us; 18us; 182us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 181us; 26us; 170us; 27us; 171us; 28us; 172us; 29us; 173us; 30us; 174us; 31us; 175us; 22us; 32768us; 1us; 187us; 3us; 38us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 34us; 72us; 35us; 93us; 37us; 81us; 41us; 111us; 43us; 50us; 46us; 60us; 48us; 207us; 49us; 138us; 50us; 140us; 51us; 55us; 57us; 49us; 59us; 128us; 61us; 203us; 62us; 204us; 22us; 32768us; 1us; 187us; 3us; 38us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 34us; 73us; 35us; 93us; 37us; 81us; 41us; 111us; 43us; 50us; 46us; 61us; 48us; 207us; 49us; 138us; 50us; 140us; 51us; 55us; 57us; 49us; 59us; 128us; 61us; 203us; 62us; 204us; 1us; 32768us; 45us; 69us; 22us; 32768us; 1us; 187us; 3us; 38us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 34us; 72us; 35us; 93us; 37us; 81us; 41us; 111us; 43us; 50us; 46us; 60us; 48us; 207us; 49us; 138us; 50us; 140us; 51us; 55us; 57us; 49us; 59us; 128us; 61us; 203us; 62us; 204us; 22us; 32768us; 1us; 187us; 3us; 38us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 34us; 73us; 35us; 93us; 37us; 81us; 41us; 111us; 43us; 50us; 46us; 61us; 48us; 207us; 49us; 138us; 50us; 140us; 51us; 55us; 57us; 49us; 59us; 128us; 61us; 203us; 62us; 204us; 0us; 16414us; 1us; 32768us; 1us; 74us; 1us; 32768us; 1us; 75us; 13us; 32768us; 1us; 187us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 48us; 207us; 49us; 138us; 50us; 140us; 59us; 128us; 61us; 203us; 62us; 204us; 13us; 32768us; 1us; 187us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 48us; 207us; 49us; 138us; 50us; 140us; 59us; 128us; 61us; 203us; 62us; 204us; 16us; 32768us; 2us; 79us; 16us; 185us; 17us; 184us; 18us; 182us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 181us; 26us; 170us; 27us; 171us; 28us; 172us; 29us; 173us; 30us; 174us; 31us; 175us; 16us; 32768us; 2us; 78us; 16us; 185us; 17us; 184us; 18us; 182us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 181us; 26us; 170us; 27us; 171us; 28us; 172us; 29us; 173us; 30us; 174us; 31us; 175us; 22us; 32768us; 1us; 187us; 3us; 38us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 34us; 72us; 35us; 93us; 37us; 81us; 41us; 111us; 43us; 50us; 46us; 60us; 48us; 207us; 49us; 138us; 50us; 140us; 51us; 55us; 57us; 49us; 59us; 128us; 61us; 203us; 62us; 204us; 22us; 32768us; 1us; 187us; 3us; 38us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 34us; 73us; 35us; 93us; 37us; 81us; 41us; 111us; 43us; 50us; 46us; 61us; 48us; 207us; 49us; 138us; 50us; 140us; 51us; 55us; 57us; 49us; 59us; 128us; 61us; 203us; 62us; 204us; 0us; 16415us; 22us; 32768us; 1us; 187us; 3us; 38us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 34us; 72us; 35us; 93us; 37us; 81us; 41us; 111us; 43us; 50us; 46us; 60us; 48us; 207us; 49us; 138us; 50us; 140us; 51us; 55us; 57us; 49us; 59us; 128us; 61us; 203us; 62us; 204us; 2us; 32768us; 34us; 83us; 40us; 88us; 1us; 32768us; 1us; 84us; 13us; 32768us; 1us; 187us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 48us; 207us; 49us; 138us; 50us; 140us; 59us; 128us; 61us; 203us; 62us; 204us; 16us; 32768us; 2us; 86us; 16us; 185us; 17us; 184us; 18us; 182us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 181us; 26us; 170us; 27us; 171us; 28us; 172us; 29us; 173us; 30us; 174us; 31us; 175us; 1us; 32768us; 7us; 87us; 0us; 16416us; 1us; 32768us; 1us; 89us; 13us; 32768us; 1us; 187us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 48us; 207us; 49us; 138us; 50us; 140us; 59us; 128us; 61us; 203us; 62us; 204us; 16us; 32768us; 2us; 91us; 16us; 185us; 17us; 184us; 18us; 182us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 181us; 26us; 170us; 27us; 171us; 28us; 172us; 29us; 173us; 30us; 174us; 31us; 175us; 1us; 32768us; 7us; 92us; 0us; 16417us; 3us; 32768us; 1us; 94us; 29us; 195us; 59us; 191us; 13us; 32768us; 1us; 187us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 48us; 207us; 49us; 138us; 50us; 140us; 59us; 128us; 61us; 203us; 62us; 204us; 16us; 32768us; 7us; 96us; 16us; 185us; 17us; 184us; 18us; 182us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 181us; 26us; 170us; 27us; 171us; 28us; 172us; 29us; 173us; 30us; 174us; 31us; 175us; 13us; 32768us; 1us; 187us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 48us; 207us; 49us; 138us; 50us; 140us; 59us; 128us; 61us; 203us; 62us; 204us; 16us; 32768us; 7us; 98us; 16us; 185us; 17us; 184us; 18us; 182us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 181us; 26us; 170us; 27us; 171us; 28us; 172us; 29us; 173us; 30us; 174us; 31us; 175us; 13us; 32768us; 1us; 187us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 48us; 207us; 49us; 138us; 50us; 140us; 59us; 128us; 61us; 203us; 62us; 204us; 16us; 32768us; 2us; 100us; 16us; 185us; 17us; 184us; 18us; 182us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 181us; 26us; 170us; 27us; 171us; 28us; 172us; 29us; 173us; 30us; 174us; 31us; 175us; 22us; 32768us; 1us; 187us; 3us; 38us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 34us; 72us; 35us; 93us; 37us; 81us; 41us; 111us; 43us; 50us; 46us; 60us; 48us; 207us; 49us; 138us; 50us; 140us; 51us; 55us; 57us; 49us; 59us; 128us; 61us; 203us; 62us; 204us; 0us; 16418us; 2us; 32768us; 5us; 198us; 36us; 103us; 1us; 32768us; 53us; 104us; 1us; 32768us; 1us; 105us; 1us; 32768us; 61us; 106us; 1us; 32768us; 8us; 107us; 1us; 32768us; 61us; 108us; 1us; 32768us; 2us; 109us; 22us; 32768us; 1us; 187us; 3us; 38us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 34us; 72us; 35us; 93us; 37us; 81us; 41us; 111us; 43us; 50us; 46us; 60us; 48us; 207us; 49us; 138us; 50us; 140us; 51us; 55us; 57us; 49us; 59us; 128us; 61us; 203us; 62us; 204us; 0us; 16419us; 1us; 32768us; 1us; 112us; 13us; 32768us; 1us; 187us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 48us; 207us; 49us; 138us; 50us; 140us; 59us; 128us; 61us; 203us; 62us; 204us; 16us; 32768us; 2us; 114us; 16us; 185us; 17us; 184us; 18us; 182us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 181us; 26us; 170us; 27us; 171us; 28us; 172us; 29us; 173us; 30us; 174us; 31us; 175us; 1us; 32768us; 3us; 115us; 2us; 32768us; 42us; 213us; 54us; 209us; 1us; 32768us; 4us; 117us; 0us; 16420us; 0us; 16421us; 0us; 16422us; 0us; 16423us; 7us; 16424us; 2us; 194us; 5us; 198us; 9us; 126us; 11us; 142us; 12us; 144us; 13us; 146us; 14us; 148us; 6us; 16424us; 5us; 198us; 9us; 126us; 11us; 142us; 12us; 144us; 13us; 146us; 14us; 148us; 0us; 16425us; 1us; 16425us; 2us; 188us; 0us; 16426us; 13us; 32768us; 1us; 187us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 48us; 207us; 49us; 138us; 50us; 140us; 59us; 128us; 61us; 203us; 62us; 204us; 15us; 16427us; 16us; 185us; 17us; 184us; 18us; 182us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 181us; 26us; 170us; 27us; 171us; 28us; 172us; 29us; 173us; 30us; 174us; 31us; 175us; 1us; 16457us; 1us; 129us; 13us; 16462us; 1us; 187us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 48us; 207us; 49us; 138us; 50us; 140us; 59us; 128us; 61us; 203us; 62us; 204us; 1us; 32768us; 2us; 131us; 0us; 16428us; 3us; 32768us; 1us; 192us; 29us; 195us; 59us; 191us; 1us; 16429us; 5us; 198us; 3us; 32768us; 1us; 192us; 29us; 195us; 59us; 191us; 1us; 16430us; 5us; 198us; 13us; 32768us; 1us; 187us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 48us; 207us; 49us; 138us; 50us; 140us; 59us; 128us; 61us; 203us; 62us; 204us; 0us; 16431us; 13us; 32768us; 1us; 187us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 48us; 207us; 49us; 138us; 50us; 140us; 59us; 128us; 61us; 203us; 62us; 204us; 15us; 16432us; 16us; 185us; 17us; 184us; 18us; 182us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 181us; 26us; 170us; 27us; 171us; 28us; 172us; 29us; 173us; 30us; 174us; 31us; 175us; 13us; 16433us; 1us; 187us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 48us; 207us; 49us; 138us; 50us; 140us; 59us; 128us; 61us; 203us; 62us; 204us; 15us; 16434us; 16us; 185us; 17us; 184us; 18us; 182us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 181us; 26us; 170us; 27us; 171us; 28us; 172us; 29us; 173us; 30us; 174us; 31us; 175us; 13us; 32768us; 1us; 187us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 48us; 207us; 49us; 138us; 50us; 140us; 59us; 128us; 61us; 203us; 62us; 204us; 15us; 16435us; 16us; 185us; 17us; 184us; 18us; 182us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 181us; 26us; 170us; 27us; 171us; 28us; 172us; 29us; 173us; 30us; 174us; 31us; 175us; 13us; 32768us; 1us; 187us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 48us; 207us; 49us; 138us; 50us; 140us; 59us; 128us; 61us; 203us; 62us; 204us; 15us; 16436us; 16us; 185us; 17us; 184us; 18us; 182us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 181us; 26us; 170us; 27us; 171us; 28us; 172us; 29us; 173us; 30us; 174us; 31us; 175us; 13us; 32768us; 1us; 187us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 48us; 207us; 49us; 138us; 50us; 140us; 59us; 128us; 61us; 203us; 62us; 204us; 15us; 16437us; 16us; 185us; 17us; 184us; 18us; 182us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 181us; 26us; 170us; 27us; 171us; 28us; 172us; 29us; 173us; 30us; 174us; 31us; 175us; 13us; 32768us; 1us; 187us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 48us; 207us; 49us; 138us; 50us; 140us; 59us; 128us; 61us; 203us; 62us; 204us; 15us; 16438us; 16us; 185us; 17us; 184us; 18us; 182us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 181us; 26us; 170us; 27us; 171us; 28us; 172us; 29us; 173us; 30us; 174us; 31us; 175us; 0us; 16439us; 4us; 16440us; 26us; 170us; 29us; 173us; 30us; 174us; 31us; 175us; 4us; 16441us; 26us; 170us; 29us; 173us; 30us; 174us; 31us; 175us; 1us; 16442us; 26us; 170us; 1us; 16443us; 26us; 170us; 1us; 16444us; 26us; 170us; 11us; 16445us; 18us; 182us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 181us; 26us; 170us; 27us; 171us; 28us; 172us; 29us; 173us; 30us; 174us; 31us; 175us; 11us; 16446us; 18us; 182us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 181us; 26us; 170us; 27us; 171us; 28us; 172us; 29us; 173us; 30us; 174us; 31us; 175us; 10us; 16447us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 181us; 26us; 170us; 27us; 171us; 28us; 172us; 29us; 173us; 30us; 174us; 31us; 175us; 10us; 16448us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 181us; 26us; 170us; 27us; 171us; 28us; 172us; 29us; 173us; 30us; 174us; 31us; 175us; 10us; 16449us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 181us; 26us; 170us; 27us; 171us; 28us; 172us; 29us; 173us; 30us; 174us; 31us; 175us; 10us; 16450us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 181us; 26us; 170us; 27us; 171us; 28us; 172us; 29us; 173us; 30us; 174us; 31us; 175us; 16us; 32768us; 16us; 185us; 17us; 184us; 18us; 182us; 19us; 183us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 181us; 26us; 170us; 27us; 171us; 28us; 172us; 29us; 173us; 30us; 174us; 31us; 175us; 10us; 16451us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 181us; 26us; 170us; 27us; 171us; 28us; 172us; 29us; 173us; 30us; 174us; 31us; 175us; 13us; 16452us; 18us; 182us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 181us; 26us; 170us; 27us; 171us; 28us; 172us; 29us; 173us; 30us; 174us; 31us; 175us; 15us; 32768us; 16us; 185us; 17us; 184us; 18us; 182us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 181us; 26us; 170us; 27us; 171us; 28us; 172us; 29us; 173us; 30us; 174us; 31us; 175us; 14us; 16453us; 17us; 184us; 18us; 182us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 181us; 26us; 170us; 27us; 171us; 28us; 172us; 29us; 173us; 30us; 174us; 31us; 175us; 16us; 32768us; 6us; 199us; 16us; 185us; 17us; 184us; 18us; 182us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 181us; 26us; 170us; 27us; 171us; 28us; 172us; 29us; 173us; 30us; 174us; 31us; 175us; 16us; 16464us; 8us; 201us; 16us; 185us; 17us; 184us; 18us; 182us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 181us; 26us; 170us; 27us; 171us; 28us; 172us; 29us; 173us; 30us; 174us; 31us; 175us; 16us; 32768us; 3us; 214us; 16us; 185us; 17us; 184us; 18us; 182us; 20us; 176us; 21us; 177us; 22us; 178us; 23us; 179us; 24us; 180us; 25us; 181us; 26us; 170us; 27us; 171us; 28us; 172us; 29us; 173us; 30us; 174us; 31us; 175us; 13us; 32768us; 1us; 187us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 48us; 207us; 49us; 138us; 50us; 140us; 59us; 128us; 61us; 203us; 62us; 204us; 13us; 32768us; 1us; 187us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 48us; 207us; 49us; 138us; 50us; 140us; 59us; 128us; 61us; 203us; 62us; 204us; 13us; 32768us; 1us; 187us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 48us; 207us; 49us; 138us; 50us; 140us; 59us; 128us; 61us; 203us; 62us; 204us; 13us; 32768us; 1us; 187us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 48us; 207us; 49us; 138us; 50us; 140us; 59us; 128us; 61us; 203us; 62us; 204us; 13us; 32768us; 1us; 187us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 48us; 207us; 49us; 138us; 50us; 140us; 59us; 128us; 61us; 203us; 62us; 204us; 13us; 32768us; 1us; 187us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 48us; 207us; 49us; 138us; 50us; 140us; 59us; 128us; 61us; 203us; 62us; 204us; 13us; 32768us; 1us; 187us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 48us; 207us; 49us; 138us; 50us; 140us; 59us; 128us; 61us; 203us; 62us; 204us; 13us; 32768us; 1us; 187us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 48us; 207us; 49us; 138us; 50us; 140us; 59us; 128us; 61us; 203us; 62us; 204us; 13us; 32768us; 1us; 187us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 48us; 207us; 49us; 138us; 50us; 140us; 59us; 128us; 61us; 203us; 62us; 204us; 13us; 32768us; 1us; 187us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 48us; 207us; 49us; 138us; 50us; 140us; 59us; 128us; 61us; 203us; 62us; 204us; 13us; 32768us; 1us; 187us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 48us; 207us; 49us; 138us; 50us; 140us; 59us; 128us; 61us; 203us; 62us; 204us; 13us; 32768us; 1us; 187us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 48us; 207us; 49us; 138us; 50us; 140us; 59us; 128us; 61us; 203us; 62us; 204us; 13us; 32768us; 1us; 187us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 48us; 207us; 49us; 138us; 50us; 140us; 59us; 128us; 61us; 203us; 62us; 204us; 13us; 32768us; 1us; 187us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 48us; 207us; 49us; 138us; 50us; 140us; 59us; 128us; 61us; 203us; 62us; 204us; 13us; 32768us; 1us; 187us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 48us; 207us; 49us; 138us; 50us; 140us; 59us; 128us; 61us; 203us; 62us; 204us; 13us; 32768us; 1us; 187us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 48us; 207us; 49us; 138us; 50us; 140us; 59us; 128us; 61us; 203us; 62us; 204us; 0us; 16454us; 13us; 32768us; 1us; 187us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 48us; 207us; 49us; 138us; 50us; 140us; 59us; 128us; 61us; 203us; 62us; 204us; 0us; 16455us; 3us; 32768us; 1us; 192us; 29us; 195us; 59us; 191us; 1us; 16456us; 5us; 198us; 0us; 16457us; 3us; 32768us; 1us; 192us; 29us; 195us; 59us; 191us; 2us; 32768us; 2us; 194us; 5us; 198us; 0us; 16458us; 8us; 32768us; 1us; 187us; 10us; 189us; 28us; 205us; 29us; 195us; 48us; 207us; 59us; 191us; 61us; 203us; 62us; 204us; 1us; 16459us; 5us; 198us; 0us; 16460us; 13us; 32768us; 1us; 187us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 48us; 207us; 49us; 138us; 50us; 140us; 59us; 128us; 61us; 203us; 62us; 204us; 0us; 16461us; 0us; 16463us; 13us; 32768us; 1us; 187us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 48us; 207us; 49us; 138us; 50us; 140us; 59us; 128us; 61us; 203us; 62us; 204us; 0us; 16465us; 0us; 16466us; 0us; 16467us; 1us; 32768us; 61us; 206us; 0us; 16468us; 0us; 16469us; 0us; 16470us; 1us; 32768us; 3us; 210us; 22us; 32768us; 1us; 187us; 3us; 38us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 34us; 72us; 35us; 93us; 37us; 81us; 41us; 111us; 43us; 50us; 46us; 60us; 48us; 207us; 49us; 138us; 50us; 140us; 51us; 55us; 57us; 49us; 59us; 128us; 61us; 203us; 62us; 204us; 1us; 32768us; 4us; 212us; 0us; 16471us; 13us; 32768us; 1us; 187us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 48us; 207us; 49us; 138us; 50us; 140us; 59us; 128us; 61us; 203us; 62us; 204us; 22us; 32768us; 1us; 187us; 3us; 38us; 10us; 189us; 15us; 136us; 28us; 205us; 29us; 195us; 32us; 132us; 33us; 134us; 34us; 72us; 35us; 93us; 37us; 81us; 41us; 111us; 43us; 50us; 46us; 60us; 48us; 207us; 49us; 138us; 50us; 140us; 51us; 55us; 57us; 49us; 59us; 128us; 61us; 203us; 62us; 204us; 1us; 32768us; 4us; 216us; 2us; 32768us; 42us; 213us; 54us; 209us; 0us; 16472us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 3us; 4us; 6us; 7us; 10us; 11us; 13us; 14us; 15us; 19us; 23us; 25us; 26us; 28us; 32us; 34us; 38us; 41us; 42us; 45us; 48us; 49us; 51us; 52us; 54us; 56us; 58us; 60us; 62us; 63us; 65us; 67us; 69us; 70us; 71us; 73us; 75us; 76us; 100us; 102us; 103us; 127us; 128us; 130us; 154us; 155us; 156us; 158us; 159us; 160us; 162us; 166us; 167us; 184us; 185us; 200us; 201us; 218us; 219us; 220us; 222us; 224us; 238us; 252us; 269us; 286us; 309us; 332us; 334us; 357us; 380us; 381us; 383us; 385us; 399us; 413us; 430us; 447us; 470us; 493us; 494us; 517us; 520us; 522us; 536us; 553us; 555us; 556us; 558us; 572us; 589us; 591us; 592us; 596us; 610us; 627us; 641us; 658us; 672us; 689us; 712us; 713us; 716us; 718us; 720us; 722us; 724us; 726us; 728us; 751us; 752us; 754us; 768us; 785us; 787us; 790us; 792us; 793us; 794us; 795us; 796us; 804us; 811us; 812us; 814us; 815us; 829us; 845us; 847us; 861us; 863us; 864us; 868us; 870us; 874us; 876us; 890us; 891us; 905us; 921us; 935us; 951us; 965us; 981us; 995us; 1011us; 1025us; 1041us; 1055us; 1071us; 1072us; 1077us; 1082us; 1084us; 1086us; 1088us; 1100us; 1112us; 1123us; 1134us; 1145us; 1156us; 1173us; 1184us; 1198us; 1214us; 1229us; 1246us; 1263us; 1280us; 1294us; 1308us; 1322us; 1336us; 1350us; 1364us; 1378us; 1392us; 1406us; 1420us; 1434us; 1448us; 1462us; 1476us; 1490us; 1504us; 1505us; 1519us; 1520us; 1524us; 1526us; 1527us; 1531us; 1534us; 1535us; 1544us; 1546us; 1547us; 1561us; 1562us; 1563us; 1577us; 1578us; 1579us; 1580us; 1582us; 1583us; 1584us; 1585us; 1587us; 1610us; 1612us; 1613us; 1627us; 1650us; 1652us; 1655us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 1us; 2us; 1us; 2us; 3us; 3us; 4us; 6us; 6us; 0us; 1us; 1us; 3us; 3us; 0us; 2us; 3us; 1us; 1us; 1us; 4us; 2us; 2us; 3us; 1us; 7us; 5us; 7us; 7us; 9us; 10us; 7us; 7us; 5us; 5us; 1us; 1us; 1us; 3us; 4us; 2us; 2us; 2us; 2us; 1us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 5us; 3us; 3us; 1us; 3us; 2us; 1us; 3us; 2us; 2us; 4us; 0us; 1us; 1us; 3us; 1us; 1us; 2us; 1us; 1us; 4us; 6us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 4us; 5us; 5us; 5us; 5us; 5us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 10us; 10us; 10us; 11us; 11us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 13us; 13us; 13us; 14us; 14us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 16us; 16us; 16us; 17us; 17us; 17us; 17us; 17us; 18us; 18us; 19us; 19us; 20us; 20us; 20us; 20us; 21us; 22us; 22us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16387us; 65535us; 16388us; 16389us; 65535us; 65535us; 65535us; 16391us; 65535us; 65535us; 65535us; 65535us; 65535us; 16393us; 65535us; 65535us; 16394us; 65535us; 16395us; 65535us; 65535us; 65535us; 65535us; 65535us; 16396us; 65535us; 65535us; 65535us; 16397us; 16399us; 65535us; 65535us; 16401us; 65535us; 65535us; 16402us; 65535us; 16404us; 65535us; 65535us; 16405us; 16406us; 65535us; 16407us; 16408us; 65535us; 65535us; 16409us; 65535us; 16410us; 65535us; 16411us; 65535us; 16412us; 16413us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16414us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16416us; 65535us; 65535us; 65535us; 65535us; 16417us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16418us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16419us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16420us; 16421us; 16422us; 16423us; 65535us; 65535us; 16425us; 65535us; 16426us; 65535us; 65535us; 65535us; 65535us; 65535us; 16428us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16454us; 65535us; 16455us; 65535us; 65535us; 16457us; 65535us; 65535us; 16458us; 65535us; 65535us; 16460us; 65535us; 16461us; 16463us; 65535us; 16465us; 16466us; 16467us; 65535us; 16468us; 16469us; 16470us; 65535us; 65535us; 65535us; 16471us; 65535us; 65535us; 65535us; 65535us; 16472us; |]
let _fsyacc_reductions ()  =    [| 
# 559 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 568 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 50 "CPar.fsy"
                                                               Prog _1 
                   )
# 50 "CPar.fsy"
                 : Absyn.program));
# 579 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 55 "CPar.fsy"
                                                               [] 
                   )
# 55 "CPar.fsy"
                 : 'gentype_Topdecs));
# 589 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 56 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 56 "CPar.fsy"
                 : 'gentype_Topdecs));
# 601 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 60 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 60 "CPar.fsy"
                 : 'gentype_Topdec));
# 612 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "CPar.fsy"
                                                               _1 
                   )
# 61 "CPar.fsy"
                 : 'gentype_Topdec));
# 623 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 79 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 79 "CPar.fsy"
                 : 'gentype_Vardec));
# 635 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 90 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 90 "CPar.fsy"
                 : 'gentype_Vardesc));
# 646 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 95 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 95 "CPar.fsy"
                 : 'gentype_Vardesc));
# 657 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 97 "CPar.fsy"
                                                               _2                                      
                   )
# 97 "CPar.fsy"
                 : 'gentype_Vardesc));
# 668 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 99 "CPar.fsy"
                 : 'gentype_Vardesc));
# 679 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 101 "CPar.fsy"
                 : 'gentype_Vardesc));
# 691 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 106 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 106 "CPar.fsy"
                 : 'gentype_Fundec));
# 704 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 108 "CPar.fsy"
                 : 'gentype_Fundec));
# 718 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 "CPar.fsy"
                                                               [] 
                   )
# 113 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 728 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 114 "CPar.fsy"
                                                               _1 
                   )
# 114 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 739 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 "CPar.fsy"
                                                               [_1]     
                   )
# 118 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 750 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 119 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 762 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 "CPar.fsy"
                                                               Block _2 
                   )
# 124 "CPar.fsy"
                 : 'gentype_Block));
# 773 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 "CPar.fsy"
                                                               [] 
                   )
# 128 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 783 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 129 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 795 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 130 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 807 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "CPar.fsy"
                                                               _1 
                   )
# 134 "CPar.fsy"
                 : 'gentype_Stmt));
# 818 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "CPar.fsy"
                                                               _1 
                   )
# 135 "CPar.fsy"
                 : 'gentype_Stmt));
# 829 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "CPar.fsy"
                                                               Pass                 
                   )
# 139 "CPar.fsy"
                 : 'gentype_StmtM));
# 839 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "CPar.fsy"
                                                               Len(_3)              
                   )
# 140 "CPar.fsy"
                 : 'gentype_StmtM));
# 850 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "CPar.fsy"
                                                               Expr(_1)             
                   )
# 141 "CPar.fsy"
                 : 'gentype_StmtM));
# 861 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "CPar.fsy"
                                                               Return None          
                   )
# 142 "CPar.fsy"
                 : 'gentype_StmtM));
# 871 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "CPar.fsy"
                                                               Return(Some(_2))     
                   )
# 143 "CPar.fsy"
                 : 'gentype_StmtM));
# 882 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "CPar.fsy"
                                                               _1                   
                   )
# 144 "CPar.fsy"
                 : 'gentype_StmtM));
# 893 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 145 "CPar.fsy"
                 : 'gentype_StmtM));
# 906 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 146 "CPar.fsy"
                 : 'gentype_StmtM));
# 918 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "CPar.fsy"
                                                               Dowhile(_2,_5)       
                   )
# 147 "CPar.fsy"
                 : 'gentype_StmtM));
# 930 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "CPar.fsy"
                                                               Dountil(_2,_5)       
                   )
# 148 "CPar.fsy"
                 : 'gentype_StmtM));
# 942 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "CPar.fsy"
                                                                         For(_3,_5,_7,_9)     
                   )
# 149 "CPar.fsy"
                 : 'gentype_StmtM));
# 956 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            let _6 = parseState.GetInput(6) :?> int in
            let _8 = parseState.GetInput(8) :?> int in
            let _10 = parseState.GetInput(10) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "CPar.fsy"
                                                                                   Forinrange(_2,_6,_8,_10)     
                   )
# 150 "CPar.fsy"
                 : 'gentype_StmtM));
# 970 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_StmtS in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "CPar.fsy"
                                                                            Switch(_3,_6) 
                   )
# 151 "CPar.fsy"
                 : 'gentype_StmtM));
# 982 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "CPar.fsy"
                                                                     If(_3, _5, _7)       
                   )
# 155 "CPar.fsy"
                 : 'gentype_StmtU));
# 995 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "CPar.fsy"
                                                                     If(_3, _5, Block []) 
                   )
# 156 "CPar.fsy"
                 : 'gentype_StmtU));
# 1007 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "CPar.fsy"
                                                                     While(_3, _5)        
                   )
# 157 "CPar.fsy"
                 : 'gentype_StmtU));
# 1019 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 "CPar.fsy"
                                                               Access _1           
                   )
# 161 "CPar.fsy"
                 : 'gentype_Expr));
# 1030 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 "CPar.fsy"
                                                               _1                  
                   )
# 162 "CPar.fsy"
                 : 'gentype_Expr));
# 1041 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "CPar.fsy"
                                                               _1                  
                   )
# 166 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1052 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 167 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1064 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 168 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1076 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "CPar.fsy"
                                                               Prim0("++", _2)     
                   )
# 169 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1087 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "CPar.fsy"
                                                               Prim0("--", _2)     
                   )
# 170 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1098 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 171 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1109 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "CPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 172 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1120 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "CPar.fsy"
                                                               Prim1("printc", nl) 
                   )
# 174 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1130 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "CPar.fsy"
                                                               Prim1("println", _2) 
                   )
# 175 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1141 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "CPar.fsy"
                                                               Opeassign(_1, "+=", _3) 
                   )
# 176 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1153 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "CPar.fsy"
                                                               Opeassign(_1, "-=", _3) 
                   )
# 177 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1165 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "CPar.fsy"
                                                               Opeassign(_1, "*=", _3) 
                   )
# 178 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1177 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "CPar.fsy"
                                                               Opeassign(_1, "/=", _3) 
                   )
# 179 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1189 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "CPar.fsy"
                                                               Prim2("**",  _1, _3) 
                   )
# 180 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1201 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 181 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1213 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 182 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1225 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 183 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1237 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 184 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1249 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 185 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1261 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 "CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 186 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1273 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 187 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1285 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 188 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1297 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 189 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1309 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 190 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1321 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 191 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1333 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 "CPar.fsy"
                                                               Prim3(_1, _3, _5)
                   )
# 192 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1346 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 193 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1358 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 194 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1370 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 202 "CPar.fsy"
                                                               CstI _1             
                   )
# 202 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1381 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 203 "CPar.fsy"
                                                               _2                  
                   )
# 203 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1392 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 204 "CPar.fsy"
                                                               Addr _2             
                   )
# 204 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1403 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 208 "CPar.fsy"
                                                               AccVar _1           
                   )
# 208 "CPar.fsy"
                 : 'gentype_Access));
# 1414 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 209 "CPar.fsy"
                                                               _2                  
                   )
# 209 "CPar.fsy"
                 : 'gentype_Access));
# 1425 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 210 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 210 "CPar.fsy"
                 : 'gentype_Access));
# 1436 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 211 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 211 "CPar.fsy"
                 : 'gentype_Access));
# 1447 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 212 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 212 "CPar.fsy"
                 : 'gentype_Access));
# 1459 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 "CPar.fsy"
                                                               []       
                   )
# 216 "CPar.fsy"
                 : 'gentype_Exprs));
# 1469 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 217 "CPar.fsy"
                                                               _1       
                   )
# 217 "CPar.fsy"
                 : 'gentype_Exprs));
# 1480 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 221 "CPar.fsy"
                                                               [_1]     
                   )
# 221 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1491 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 222 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 222 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1503 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 226 "CPar.fsy"
                                                               _1       
                   )
# 226 "CPar.fsy"
                 : 'gentype_Const));
# 1514 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 227 "CPar.fsy"
                                                               _1       
                   )
# 227 "CPar.fsy"
                 : 'gentype_Const));
# 1525 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 228 "CPar.fsy"
                                                               - _2     
                   )
# 228 "CPar.fsy"
                 : 'gentype_Const));
# 1536 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 229 "CPar.fsy"
                                                               -1       
                   )
# 229 "CPar.fsy"
                 : 'gentype_Const));
# 1546 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 234 "CPar.fsy"
                                                               TypI     
                   )
# 234 "CPar.fsy"
                 : 'gentype_Type));
# 1556 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 240 "CPar.fsy"
                                                                             Default(_3)    
                   )
# 240 "CPar.fsy"
                 : 'gentype_StmtS));
# 1567 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            let _6 = parseState.GetInput(6) :?> 'gentype_StmtS in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 241 "CPar.fsy"
                                                                           Case(_2,_4,_6)
                   )
# 241 "CPar.fsy"
                 : 'gentype_StmtS));
|]
# 1581 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 66;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
